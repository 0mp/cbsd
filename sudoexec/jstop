#!/bin/sh
#v9.2.0
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="jname"
MYDESC="Stop jail"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${system}
. ${mdtools}
. ${color}

init $*

fwcounter()
{
if [ ${ipfw_enable} -eq 1 -a -n "`sysctl -qn net.inet.ip.fw.enable`" ]; then
 ${ECHO} "${MAGENTA}Setup FW counter${NORMAL}"

TRAFDIR="${jailsysdir}/${jname}/${jname}-traffic"

[ ! -f "${ftmpdir}/${jname}-fwin" -o ! -f "${ftmpdir}/${jname}-fwout" ] && {
    ${ECHO} "${MAGENTA}fwcounter: ${GREEN}No fwin-fwout map files${NORMAL}"
    return 1
}

FWIN=`cat ${ftmpdir}/${jname}-fwin`
FWOUT=`cat ${ftmpdir}/${jname}-fwout`

rm -f "${ftmpdir}/${jname}-fwin ${ftmpdir}/${jname}-fwout"

### FWIN
 FW=`/sbin/ipfw show ${FWIN}`
 RCODE=$?
 if [ ${RCODE} -eq 0 ]; then
 /sbin/ipfw delete ${FWIN}
 fi

### FWOUT
 FW=`/sbin/ipfw show ${FWOUT}`
 RCODE=$?
 if [ ${RCODE} -eq 0 ]; then
 /sbin/ipfw delete ${FWOUT}
 fi
fi
}


master_prestop()
{
i=0
    while : ; do
    eval CMD=\${master_prestop${i}}
    [ -z "${CMD}" ] && break
    ${ECHO} "${MAGENTA}${jname} Master exec prestop: ${GREEN}${CMD}${NORMAL}"
    ${CMD}
    i=$((i + 1))
done
}


prestop()
{
i=0
    while : ; do
    eval CMD=\${exec_prestop${i}}
    [ -z "${CMD}" ] && break
    ${ECHO} "${MAGENTA}${jname} exec prestop: ${GREEN}${CMD}${NORMAL}"
    chroot ${path} ${CMD}
    i=$((i + 1))
done
}


master_afterstop()
{
i=0
    while : ; do
    eval CMD=\${master_afterstop${i}}
    [ -z "${CMD}" ] && break
    ${ECHO} "${MAGENTA}${jname} Master exec afterstop: ${GREEN}${CMD}${NORMAL}"
    ${CMD}
    i=$((i + 1))
done
}

afterstop()
{
i=0
    while : ; do
    eval CMD=\${exec_afterstop${i}}
    [ -z "${CMD}" ] && break
    ${ECHO} "${MAGENTA}${jname} exec afterstop: ${GREEN}${CMD}${NORMAL}"
    chroot ${path} ${CMD}
    i=$((i + 1))
done
}


# MAIN
if [ $# -gt 1 ]; then
# recursive
    JLIST=$*
    for jname in ${JLIST}; do
	/usr/sbin/daemon -p ${ftmpdir}/jstop.${jname}.$$ /usr/local/bin/cbsd jstop jname=${jname}
	cbsd pwait --pid=`cat ${ftmpdir}/jstop.${jname}.$$` --timeout=${parallel}
    done

    wait_for_jstop

    err 0 "${MAGENTA}Multiple stop: ${GREEN}done${NORMAL}"

fi

[ -z "${jname}" ] && jname=$1

JAILRCCONF="${jailrcconfdir}/rc.conf_${jname}"

[ ! -f  ${JAILRCCONF} ] && err 1 "${MAGENTA}no conf rc.conf file for jail: ${GREEN}${jname}${NORMAL}"

. ${JAILRCCONF}

eval multiips4=\"\$ip\"
[ $baserw -eq 1 ] && path=$data

##### check for running
ST=`cbsd jstatus jname=${jname}`
[ $? -ne 0 ] || err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"

[ ${ST} -eq 0 ] && err 1 "${MAGENTA}Not Running: ${GREEN}${NORMAL}"

fwcounter
master_prestop
prestop

#rctl area
${ECHO} "${MAGENTA}Stoping jail: ${GREEN}${jname}, parallel timeout=${parallel}${NORMAL}"
cbsd jrctl jname=${jname} mode=unset
sleep 2
/usr/sbin/jail -f ${ftmpdir}/${jname}.conf -r ${jname}
master_afterstop
afterstop

# waiting for fixed kqueue in upstream
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1

[ "$ver" != "empty" ] && {
    ${ECHO} "${MAGENTA}Updating: ${GREEN}pkg info${NORMAL}"
    cbsd pkg_info jname=${jname} out="${jailsysdir}/${jname}/pkg_info"
}

[ -n "${mdsize}" -a "${mdsize}" != "0" ] && MDFILE=`eval find_md_by_mountpath ${data}`

umount_cdirs ${path}
#[ $baserw -eq 1 -o "${ver}" != "empty" ] && unmountbase

geniplist ${multiips4}

for pureip in ${IPS}; do
    iptype $pureip
    _inet=$?
    if [ -n "${interface}" -a "${interface}" != "0" ]; then
	iface=`cbsd getnics-by-ip ip=${pureip}`
	ipwmask ${pureip}
	    [ -z "$IWM" ] || {
		case ${_inet} in
		    1) MODIF="inet" ;;
    		    2) MODIF="inet6" ;;
		esac
    		/sbin/ifconfig ${iface} ${MODIF} ${pureip} -alias
	    }
    fi
done

# make id file
UNDhost_hostname=`${ECHO} ${host_hostname} |tr  "." "_"`
FID="/var/run/jail_${UNDhost_hostname}.id"
[ ! -f "${FID}" ] || rm -f ${FID}

#cbsd jcleanup jname=${jname} > /dev/null 2>&1

[ -n "${mdsize}" -a "${mdsize}" != "0" -a -n "${MDFILE}" ] && cbsd unmountmd md=${MDFILE}
[ -n "${ddns_zone_list}" ] && cbsd ddns mode=delete jname=${jname}

