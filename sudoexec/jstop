#!/usr/local/bin/cbsd
#v10.0.0
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="jname"
MYDESC="Stop jail"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${system}
. ${mdtools}
. ${color}
. ${strings}

init $*

master_prestop()
{
    i=0
	while : ; do
	    eval CMD=\${master_prestop${i}}
	    [ -z "${CMD}" ] && break
	    ${ECHO} "${MAGENTA}${jname} Master exec prestop: ${GREEN}${CMD}${NORMAL}"
	    ${CMD}
	    i=$((i + 1))
	done
}

prestop()
{
    i=0
	while : ; do
	    eval CMD=\${exec_prestop${i}}
	    [ -z "${CMD}" ] && break
	    ${ECHO} "${MAGENTA}${jname} exec prestop: ${GREEN}${CMD}${NORMAL}"
	    chroot ${path} ${CMD}
	    i=$((i + 1))
	done
}


master_afterstop()
{
    i=0
	while : ; do
	    eval CMD=\${master_afterstop${i}}
	    [ -z "${CMD}" ] && break
	    ${ECHO} "${MAGENTA}${jname} Master exec afterstop: ${GREEN}${CMD}${NORMAL}"
	    ${CMD}
	    i=$((i + 1))
	done
}

afterstop()
{
    i=0
	while : ; do
	    eval CMD=\${exec_afterstop${i}}
	    [ -z "${CMD}" ] && break
	    ${ECHO} "${MAGENTA}${jname} exec afterstop: ${GREEN}${CMD}${NORMAL}"
	    chroot ${path} ${CMD}
	    i=$((i + 1))
	done
}


# MAIN
if [ $# -gt 1 ]; then
# recursive stop
    JLIST=$*
    for jname in ${JLIST}; do
	/usr/sbin/daemon -p ${ftmpdir}/jstop.${jname}.$$ /usr/local/bin/cbsd jstop jname=${jname}
	cbsd pwait --pid=`cat ${ftmpdir}/jstop.${jname}.$$` --timeout=${parallel}
    done

    wait_for_jstop

    err 0 "${MAGENTA}Multiple stop: ${GREEN}done${NORMAL}"
fi

[ -z "${jname}" ] && jname=$1

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ ${jid} -eq 0 ] && err 1 "${MAGENTA}Not Running: ${GREEN}${jname}${NORMAL}"

if [ $vnet -eq 1 ]; then
    . ${vimageconf}
    myepair=`get_my_device epair ${jname}`
    [ -z "${myepair}" ] && ${ECHO} "${MAGENTA}Warning: Cant find epair for vnet-type jail:${GREEN}${jname}${NORMAL}"
fi

    #determine that jail is FreeBSD. Useful for vnet operation in makejconf and
    is_freebsd=0
 
    if [ $baserw -eq 1 ]; then
        elftest=${data}/bin/sh
    else
        elftest="${basepath}/bin/sh"
    fi
    [ -f "${elftest}" ] && osname=`${miscdir}/elf_tables --osname ${elftest}`
        
    [ "${osname}" = "freebsd" ] && is_freebsd=1

cbsd makejconf jname=${jname} out=${ftmpdir}/${jname}.conf epair=${myepair}b fbsd=${is_freebsd}

eval multiips4=\"\$ip\"
[ $baserw -eq 1 ] && path=$data

fwcounters jname=${jname} mode=remove

master_prestop
prestop

#rctl area
${ECHO} "${MAGENTA}Stoping jail: ${GREEN}${jname}, parallel timeout=${parallel}${NORMAL}"
cbsd jrctl jname=${jname} mode=unset >/dev/null 2>&1
sleep 2
/usr/sbin/jail -f ${ftmpdir}/${jname}.conf -r ${jname}
master_afterstop
afterstop

[ ${vnet} -eq 1 -a -n "${myepair}" ] && ifconfig ${myepair} destroy

# waiting for fixed kqueue in upstream
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
/usr/sbin/jail -r ${ST} > /dev/null 2>&1
if [ "$ver" != "empty" ]; then
    ${ECHO} "${MAGENTA}Updating: ${GREEN}pkg info${NORMAL}"
    cbsd pkg_info jname=${jname} out="${jailsysdir}/${jname}/pkg_info"
fi
[ -n "${mdsize}" -a "${mdsize}" != "0" ] && MDFILE=`eval find_md_by_mountpath ${data}`

umount_cdirs ${path}
#[ $baserw -eq 1 -o "${ver}" != "empty" ] && unmountbase

geniplist ${multiips4}

for pureip in ${IPS}; do
    iptype $pureip
    _inet=$?
    if [ -n "${interface}" -a "${interface}" != "0" ]; then
	iface=`cbsd getnics-by-ip ip=${pureip}`
	ipwmask ${pureip}
	    [ -z "$IWM" ] || {
		case ${_inet} in
		    1) MODIF="inet" ;;
    		    2) MODIF="inet6" ;;
		esac
    		/sbin/ifconfig ${iface} ${MODIF} ${pureip} -alias
	    }
    fi
done

# make id file
UNDhost_hostname=`${ECHO} ${host_hostname} |tr  "." "_"`
FID="/var/run/jail_${UNDhost_hostname}.id"
[ ! -f "${FID}" ] || rm -f ${FID}

#cbsd jcleanup jname=${jname} > /dev/null 2>&1

[ -n "${mdsize}" -a "${mdsize}" != "0" -a -n "${MDFILE}" ] && cbsd unmountmd md=${MDFILE}
[ -n "${ddns_zone_list}" ] && cbsd ddns mode=delete jname=${jname}
cbsdsql local UPDATE jails SET jid=0,status=0 WHERE jname=\"${jname}\"
rm -f ${ftmpdir}/${jname}.conf
