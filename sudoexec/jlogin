#!/bin/sh
#v10.0.4
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="jname remote inter"
MYDESC="Exec login into jail"
CBSDMODULE="jail"

# Login by jid not supported yet

[ -f "${globalconf}" ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${strings}
init $*

[ -n "$jname" ] || jname=$1
[ -z "${remote}" ] && remote=0

try_remote()
{
    [ -f "${jailmapdb}" -a "${remote}" != "1" ] || err 1 "No such rc.conf for jail found"
    . ${jailmapdb} 2>/dev/null
    eval VAL=\$$jname
    [ -n "${VAL}" ] && { 
    RHST=`echo $VAL|awk '{printf $1"\n"}'`
    getyesno "Found jail on remote node: ${RHST}. Try to login?"
    [ $? -eq 1 -o $? -eq 3 ] && err 1 "No such jail for login"
    cbsd rexe node=${RHST} cbsd jlogin jname=$jname remote=1
    err 0 ""
    }
}

. ${jrcconf}
[ $? -eq 1 ] && try_remote
[ "$baserw" = "1" ] && path=$data

[ $jid -eq 0 ] && err 1 "Not running"

#rctl/limits area
. ${workdir}/rctl.subr

[ -z "${nice}" ] && nice="0"
#

if [ ${exec_fib} -eq 0 ]; then
    SETFIB=""
else
    SETFIB="setfib ${exec_fib}"
fi

if [ "${cpuset}" = "0" ]; then
    CPUSET=""
else
    CPUSET="cpuset -c -l ${cpuset}"
fi

if [ "${emulator}" != "0" -a -n "${emulator}" ]; then
    . ${workdir}/emulator.subr
    init_usermode_emul
    LOGIN_STR="${emultest} login -f root"
else
    LOGIN_STR="login -f root"
fi

/usr/bin/nice -n ${nice} ${SETFIB} ${CPUSET} /usr/sbin/jexec ${jid} ${LOGIN_STR}
