#!/bin/sh
#v10.0.4
globalconf="${workdir}/cbsd.conf";
MYARG="jconf"
MYOPTARG="inter ver arch customskel fstablocal delpkglist removejconf pkglist"
MYDESC="Create jail from config file"
ADDHELP="inter=0 to prevent any questions and to accept answers by default\n\
customskel = additional skel directory applyed above jail structrure\n\
fstablocal = additional fstab file stored as fstab.local\n"
CBSDMODULE="jail"
EXTHELP="wf_jcreate.html"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${system}
. ${inventory}
. ${tools}
. ${mdtools}
. ${jfs}
. ${color}
readconf buildworld.conf
readconf jail.conf
. ${workdir}/universe.subr
. ${workdir}/freebsd_world.subr

init $*

mkfstab() {
    if [ $baserw -eq 0 ]; then
	cat > ${mount_fstab} << EOF
# Please do not edit this file for additional fstabs
# Use ${jailfstabdir}/${jailfstabpref}local instead
${data}/etc /etc nullfs rw 0 0
${data}/root /root nullfs rw 0 0
${data}/tmp /tmp nullfs rw 0 0
${data}/usr/home /usr/home nullfs rw 0 0
${data}/usr/local /usr/local nullfs rw 0 0
${data}/usr/compat /usr/compat nullfs rw 0 0
${data}/var /var nullfs rw 0 0
#
EOF
    fi
}

### MAIN
[ -f "$jconf" ] || err 1 "${MAGENTA}no such jconf file${NORMAL}";
over="${ver}"
oarch="${arch}"
jconf=`realpath $jconf`

if [ -z "${delpkglist}" ]; then
    delpkglist=0
else
    delpkglist=1
fi

temprcconf="${ftmpdir}/jcreate_jconf.$$"

cp ${jconf} ${temprcconf}

if [ ${removejconf} = "1" ]; then
    trap "rm -f ${temprcconf} ${jconf}" HUP INT ABRT BUS TERM  EXIT
else
    trap "rm -f ${temprcconf}" HUP INT ABRT BUS TERM  EXIT
fi

. ${temprcconf}
. ${buildconf}
. ${temprcconf}

init_target_arch
init_basedir
init_kerneldir

cbsd jstatus jname=${jname} > /dev/null 2>&1
[ $? -eq 0 ] || err 1 "${MAGENTA}Jail with $jname already exist${NORMAL}"

get_base

# ip validate
if [ -n "${interface}" -a "${inteface}" != "0" ]; then
	### CHECK FOR IP ( 1 - check for interfaces) ####
	cbsd checkip ip=${ips} check=1 > /dev/null 2>&1
	case $? in
	    0) err 1 "${MAGENTA}Ip not in pool range${NORMAL}"
		;;
	    1)	;;
	    2) ${ECHO} "${MAGENTA}Warning:${GREEN} Ip already exists in LAN${NORMAL}"
		;;
	    *) err 1 "Unknown code from checkip"
	;;
	esac
fi

${ECHO} "${MAGENTA}Please wait: ${GREEN}this will take a while...${NORMAL}"

[ -d "${data}" ] && removedata ${data}

case $zfsfeat in
	"0") [ -d ${data} ] || mkdir -p ${data}
	    ;;
	"1") . $zfstool
	    ZPOOL=`zfs get -Ho value name ${jaildatadir}`

	    if zfsroot $jname; then
		err 1 "$ZPOOL/$jname already in use"
	    fi

	    zfs create -o atime=off -o mountpoint=${data} ${ZPOOL}/$jname
	    ;;
esac

[ ! -d "${data}" ] && err 1 "Can't create datadir ${data}"
[ ! -d ${path} -a "${baserw}" -eq 0 ] && mkdir -p ${path}
[ ! -d ${jailfstabdir}  ] && mkdir -p ${jailfstabdir}
[ ! -d "${jailsysdir}/${jname}" ] && mkdir -p ${jailsysdir}/${jname}

## MD backend place
if [ "${mdsize}" != "0" ]; then
    conv2bytes "${mdsize}" || err 1 "conv2bytes error from ${mdsize}"
    imgbytes=$convval
    blockcount=$(( imgbytes  / 1048576 ))
    mdimage="${jailsysdir}/${jname}/image.dat"
    touch "${mdimage}"
    dd if="/dev/zero" of="${mdimage}" bs=1m count=0 seek=${blockcount} 1> /dev/null 2>&1 || err 1 "Error: Couldn't create the image file. ${mdimage}"
    # Attach the .img file as a memory disk.
    mdimagedevice=`mdconfig -a -t vnode -f "${mdimage}"`
    [ $? -eq 0 ] || err 1 "Error: Failed to mdconfig on ${mdimage}"
    newfs -j -n -U "/dev/${mdimagedevice}" 1> /dev/null 2>&1 || mdconfig -d -u ${mdimagedevice} || err 1 "Error: Couldn't newfs the memory disk. ${mdimagedevice}"
    mdconfig -d -u ${mdimagedevice}
# mount here
    cbsd mountmd jroot=${data} mdfile=${mdimage}
fi
## MD backend

populate_freebsd_world
mkfstab
cp $temprcconf $rcconf

[ -n "${fstablocal}" -a -f "${fstablocal}" ] && cp ${fstablocal} ${jailfstabdir}/${jailfstabpref}${jname}.local

# Finnaly export to SQLite
cbsd jregister jname=${jname} mode=new

if [ $? -eq 0 ]; then
    ${ECHO}
    ${ECHO} "${MAGENTA}Creating ${jname} complete: ${GREEN}Enjoy!${NORMAL}"
    rm -f $rcconf

    #[ ${applytpl} -eq 1 ] && ${miscdir}/config_pkgrepo -t ${etcdir}/pkg.conf -v ${ver} -a ${arch} ${data}
    # pkg area
    if [ -n "${pkglist}" -a "${pkglist}" != "NO" -a "${ver}" != "empty" ]; then
	if [ ! -f "${pkglist}" ]; then
	    ${ECHO} "${MAGENTA}pkglist specified but not exist: ${GREEN}${pkglist}${NORMAL}"
	else
	    /usr/local/bin/cbsd pkg mode=bootstrap jname=${jname}
	    /usr/local/bin/cbsd pkg mode=install pkglist="${pkglist}" jname=${jname}
	    [ $delpkglist -eq 1 ] && rm -f ${pkglist}
	fi
    fi
    [ "${mdsize}" != "0" ] && cbsd unmountmd jroot=${data}
    exit 0
else
    ${ECHO}
    ${ECHO} "${MAGENTA}Creating ${jname} failed: ${GREEN}cbsd jregister${NORMAL}"
    ${ECHO} "${MAGENTA}Please review bad config file: ${GREEN}/tmp/rc.conf_${jname}${NORMAL}"
    mv $rcconf /tmp
    #cleanup
    [ -f "${mount_fstab}" ] && rm -f ${mount_fstab}
    removedata ${data}
    exit 1
fi
