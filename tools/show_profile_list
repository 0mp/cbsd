#!/usr/local/bin/cbsd
#v11.0.0
MYARG="search_profile"
MYOPTARG="display header active"
MYDESC="Operate with bhyve disk images and database"
CBSDMODULE="sys"
ADDHELP="search_profile= - prefix for filename, e.g: vm-${vm_os_type}, ${emulator}-freebsd- \n\
header=0 don't print header\n\
display= list by comma for column. Default: path,name,active\n\
only_active=0,1,2 show only active=0 (disabled), 1-(enabled) and 2 - (any). default is: 2\n"

. ${subr}
. ${system}
. ${strings}
. ${tools}

init $*

[ -z "${display}" ] && display="path,name,active"
[ -z "${only_active}" ] && only_active=2

#remove commas for loop action on header
mydisplay=$(echo ${display} |/usr/bin/tr ',' '  ')

# upper for header
myheader=$(echo ${mydisplay} |/usr/bin/tr '[:lower:]' '[:upper:]')

show_header()
{
	local _header="${BOLD}${myheader}${NORMAL}"
	[ ${header} -eq 1 ] && $ECHO ${_header}
}

# if $1 = "Unregister" then overwrite status to "Unregister"
populate_output_data()
{
	local _i _val

	_status=

	printf "${NORMAL}" # for column sort

	#populate values for in output string
	for _i in ${mydisplay}; do

		_val=""

		eval _val="\$$_i"
		[ -z "${_val}" ] && _val="\-"

		printf "${_val} "
	done

	printf "\n"
}

# $1 - switch name
# compile vale member by jname
populate_vale_member()
{
	local _sql="SELECT jname FROM bhyvenic WHERE nic_driver=\"vale\" AND nic_parent=\"${1}\""

	local _list
	local count=0

	_list=$( cbsdsql ${jailsysdir}/${jname}/local.sqlite ${_sql}| while read jname; do
		[ $count -ne 0 ] && printf ","
		printf "${jname}"
		count=$(( count + 1 ))
	done )

	printf "${_list}"
}


# $1 - which file from. Eg: local
show_jaildata_from_sql()
{
	local _i

	profile_list=$( /usr/bin/find ${etcdir}/defaults ${etcdir} -type f -depth 1 -maxdepth 1 -name ${search_profile}\* -exec /bin/realpath {} \; | /usr/bin/sort -u | /usr/bin/sort -n )

	for i in ${profile_list}; do
		eval $( ${GREP_CMD} -E "(^jail_profile=)|(^long_description=)|(^vm_profile=)|(^active=)" ${i} )
		path="${i}"
		[ -z "${active}" ] && active="0"
		[ -n "${jail_profile}" ] && name="${jail_profile}"
		[ -n "${vm_profile}" ] && name="${vm_profile}"
		case "${only_active}" in
			"0","1")
				[ "${active}" != "${only_active}" ] && continue
				;;
			2)
				;;
		esac
		populate_output_data
	done

	IFS=" "
}


show_local()
{
	local _errcode _status

	show_header
	show_jaildata_from_sql local
}

show_vhid()
{
	show_local
}

#### MAIN
[ -z "${header}" ] && header=1
sqldelimer=" "
show_local | /usr/bin/column -t
