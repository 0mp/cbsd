#!/usr/local/bin/cbsd
#v10.1.6
CBSDMODULE="build"
MYARG="filelist dstdir basedir"
MYOPTARG="prunelist verbose chaselibs"
MYDESC="Copy bin/lib files by filelist{.xz} from basedir to dstdir"
ADDHELP="filelist - source with file list to copy\n\
dstdir - destination dir\n\
basedir - copy file from this dir\n\
prunelist - source with file list to exclude\n"

. ${subr}

verbose=0
chaselibs=0

init $*

BASE_DIR="${basedir}"
FILES="${filelist}"
DST_DIR="${dstdir}"

make_mtree()
{
	[ -f ${BASE_DIR}/etc/mtree/BSD.root.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.root.dist -p ${DST_DIR} >/dev/null
	[ -f ${BASE_DIR}/etc/mtree/BSD.usr.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.usr.dist -p ${DST_DIR}/usr >/dev/null
	[ -f ${BASE_DIR}/etc/mtree/BSD.var.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.var.dist -p ${DST_DIR}/var >/dev/null
	[ -f ${BASE_DIR}/etc/mtree/BIND.chroot.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BIND.chroot.dist -p ${DST_DIR}/var/named >/dev/null
	[ -f ${BASE_DIR}/etc/mtree/BSD.sendmail.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.sendmail.dist -p ${DST_DIR} >/dev/null
	[ -f ${BASE_DIR}/etc/mtree/BSD.include.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.include.dist -p ${DST_DIR}/usr/include >/dev/null
	[ ! -d "${DST_DIR}/usr/tests" ] && /bin/mkdir -p "${DST_DIR}/usr/tests"
	[ -f ${BASE_DIR}/etc/mtree/BSD.tests.dist ] && /usr/sbin/mtree -deU -f ${BASE_DIR}/etc/mtree/BSD.tests.dist -p ${DST_DIR}/usr/tests >/dev/null
}

make_libmap()
{
	A=$( /usr/bin/mktemp /tmp/libtxt.XXX )
	B=$( /usr/bin/mktemp /tmp/libtxtsort.XXX )
	TRAP="${TRAP} /bin/rm -f ${A} ${B};"
	trap "${TRAP}" HUP INT ABRT BUS TERM EXIT

	/usr/bin/xzcat ${FILES} |while read line; do
		[ -z "${line}" ] && continue
		case ":${line}" in
			:#*)
				continue
				;;
		esac
		[ -r "${BASE_DIR}${line}" ] && /usr/bin/ldd -f "%p\n" ${BASE_DIR}${line} >> $A 2>/dev/null
	done
	/usr/bin/sort -u ${A} > ${B}
	/bin/rm -f ${A}
}

copy_binlib()
{
	local _dotnum=0

	# pass one: copy files
	/usr/bin/xzcat ${FILES}| while read line; do
		[ -z "${line}" ] && continue
		case ":${line}" in
			:#*)
				continue
				;;
		esac

		if [ ! -r "${BASE_DIR}${line}" ]; then
			[ ${verbose} -eq 1 ] && ${ECHO} "\n${MAGENTA}Notice: Exist in index, but not found in ${GREEN}${BASE_DIR}: ${MAGENTA}${line}${NORMAL}\n"
			continue
		fi

		D=$( /usr/sbin/chroot ${BASE_DIR} dirname ${line} )
		[ ! -d "{DST_DIR}${D}" ] && mkdir -p ${DST_DIR}${D}
		[ ${verbose} -eq 1 ] && echo "/bin/cp -a ${BASE_DIR}${line} ${DST_DIR}${D}"
		/bin/cp -a ${BASE_DIR}${line} ${DST_DIR}${D}

		_dotnum=$(( _dotnum + 1 ))
		if [ ${_dotnum} -gt 100 -a ${verbose} -eq 0 ]; then
			printf "."
			_dotnum=0
		fi
	done

	[ ${chaselibs} -eq 0 ] && return 0

	_dotnum=0

	# necessary libs
	/bin/cat ${B}| while read line; do
		[ -z "${line}" ] && continue
		[ -f "${DST_DIR}${line}" ] && continue
		[ ! -r "${BASE_DIR}${line}" -a ${verbose} -eq 1 ] && ${ECHO} "\n${MAGENTA}Notice: exist in index, but not found in ${GREEN}${BASE_DIR}: ${MAGENTA}${line}${NORMAL}\n" && continue
		D=$( /usr/sbin/chroot ${BASE_DIR} dirname ${line} )
		[ ! -d "${DST_DIR}${D}" ] && /bin/mkdir -p ${DST_DIR}${D}
		[ ${verbose} -eq 1 ] && echo "/bin/cp -a ${BASE_DIR}${line} ${DST_DIR}${D}"
		/bin/cp -a ${BASE_DIR}${line} ${DST_DIR}${D}
		_dotnum=$(( _dotnum + 1 ))
		if [ ${_dotnum} -gt 100 -a ${verbose} -eq 0 ]; then
			printf "."
			_dotnum=0
		fi

		_dotnum=$(( _dotnum + 1 ))

	done

	/bin/rm -f ${B}
}



prunelist()
{
	[ ! -f "${prunelist}" -o -z "${prunelist}" ] && return 0 # no prune
	[ -z "${1}" ] && return 0 # sanity

	${ECHO} "${MAGENTA}Prune file by list: ${GREEN}${prunelist}${NORMAL}"

	for FILE in $( /bin/cat ${prunelist} ); do
		[ -z "${FILE}" ] && continue
		case ":${FILE}" in
			:#* | :)
				continue
				;;
		esac
		/bin/rm -rf ${1}/${FILE} 2>/dev/null
	done
}

[ ! -d "${BASE_DIR}" ] && err 1 "No such ${BASE_DIR}
[ ! -r "${FILES}" ] && err 1 "No such ${FILES}

if [ -d "${DST_DIR}" ]; then
	/bin/chflags -R noschg ${DST_DIR}
	/bin/rm -rf ${DST_DIR}
fi

/bin/mkdir -p ${DST_DIR}

make_mtree
make_libmap
copy_binlib
# CRLF after dot:
[ ${verbose} -eq 0 ] && echo
prunelist
preparebase dst=${DST_DIR}
