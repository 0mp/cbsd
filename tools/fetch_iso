#!/usr/local/bin/cbsd
#v11.1.17
MYARG="dstdir"
MYOPTARG="gensha256 name path keepname"
MYDESC="Fetch ISO images from mirror sites"
CBSDMODULE="sys"
ADDHELP="dstdir - destination directory\n\
gensha256 - re-generate sha256sum files\n\
name - fetch by profile name, e.g: FreeBSD-x64-11.1, Debian-x86-9\n\
path - fetch by profile path, e.g: /usr/jails/etc/defaults/vm-openbsd-x86-6.conf\n\
keepname - when 0, save ISO as register_iso_name variable, e.g cbsd-iso-${iso_img}\n\
           when 1, save ISO as original name on remote site (for mirroring)\n\
"

. ${subr}
. ${system}
. ${strings}
. ${tools}

keepname=0
gensha256=0
name=
path=

init $*

[ ! -d ${dstdir} ] && /bin/mkdir -p ${dstdir}

# gensha256
# $1 - path to profile which needs to be updated
# $2 - path to ISO
gensha256_sum()
{
	local _sha256sum
	local _profile="${1}"
	local _file="${2}"
	local _mdfile="${2}.sha256"

	[ ! -r ${_profile} ] && return 0
	[ ! -r ${_file} ] && return 0

	printf "${MAGENTA} calculating gensha256sum: ${NORMAL}"
	_sha256sum=$( /sbin/sha256 -q ${_file} )
	sysrc -qf ${_profile} sha256sum="${_sha256sum}"
	${ECHO} "${GREEN}${_sha256sum}${MAGENTA}. Updated${NORMAL}"
}

# must be: $dstdir, $fout
# $iso_site, $rfile
obtain_iso()
{
	if [ ! -r ${dstdir}/${fout} ]; then

		for site in ${iso_site}; do
			echo "fetch -o ${dstdir}/${fout} ${site}${rfile}"
			fetch -o ${dstdir}/${fout} ${site}${rfile}
			[ $? -eq 0 ] && return 0
		done
	fi
}


fetch_iso_all()
{
	for i in $( env NOCOLOR=1 cbsd show_profile_list show_bhyve=1 search_profile=vm- display=path header=0 ); do
		iso_img=
		iso_img_dist=
		iso_site=
		fetch=0
		vm_profile=
		register_iso_name=

		[ ! -r ${i} ] && continue

		. ${i}

		[ ${fetch} -eq 0 ] && continue
		[ -z "${iso_site}"  ] && continue

		${ECHO} " == ${MAGENTA}Processing ${GREEN}${vm_profile}${MAGENTA} from ${GREEN}${i}${NORMAL} =="

		if [ -n "${iso_img_dist}" ]; then
			rfile="${iso_img_dist}"
		else
			rfile="${iso_img}"
		fi

		if [ ${keepname} -eq 1 ]; then
			fout="${rfile}"
		else
			fout="${register_iso_name}"
		fi

		obtain_iso
		ret=$?

		# check size

		# gensha256?
		if [ ${gensha256} -eq 1 ]; then
			profile_name=$( /usr/bin/basename ${i} )
			gensha256_sum /usr/local/cbsd/etc/defaults/${profile_name} ${dstdir}/${fout}
		fi
		echo
	done
}

[ -n "${name}" -a -n "${path}" ] && err 1 "${MAGENTA}Please use ${GREEN}name= ${MAGENTA}OR ${GREEN}path=${NORMAL}"

if [ -z "${name}" -a -z "${path}" ]; then
	fetch_iso_all
	exit 0
fi

[ -n "${name}" ] && err 1 "${MAGENTA}Not supported yet${NORMAL}"
[ -n "${path}" ] && err 1 "${MAGENTA}Not supported yet${NORMAL}"

