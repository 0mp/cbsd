#!/bin/sh
#v9.1.0
globalconf="${workdir}/cbsd.conf";
MYARG="jname part mode"
MYOPTARG="out"
MYDESC="Pack or extract chunk from from image"
ADDHELP="out=path_to_file for ascii-part or directory to extract for binary\n\
or for binary image from pack mode\n\
part variants: header,rcconf,fstab,pkginfo,descr,info,sysdata,data\n\
mode=pack,extract\n"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
init $*

extractchunk()
{
if [ $BINARY -eq 0 ]; then
    if [ -n "${out}" ]; then
	tail -n +${FROM} ${SRC} | head -n${END} > ${out}
    else
	tail -n +${FROM} ${SRC} | head -n${END}
    fi
else
    [ -z "${out}" ] && out=`pwd`
    tail +${FROM} ${SRC} | tar xpf - -C "${out}" --numeric-owner
fi

}

extractme()
{
if [ -f "${jname}" ]; then
    SRC="${jname}"
else
    SRC="${importdir}/${jname}.img"
    [ -f ${SRC} ] || err 1 "No such image ${SRC}"
fi

DEST="${DATA}/${jname}"

SPACER="___NCSTART_"
BINARY=0
END=0

case "${part}" in
"header")
FROM="`awk '/^___NCSTART_HEADER=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_RCCONF=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"rcconf")
FROM="`awk '/^___NCSTART_RCCONF=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_FSTAB=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"fstab")
FROM="`awk '/^___NCSTART_FSTAB=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_PKGINFO=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"pkginfo")
FROM="`awk '/^___NCSTART_PKGINFO=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_DESCR=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"descr")
FROM="`awk '/^___NCSTART_DESCR=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_INFO=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"info")
FROM="`awk '/^___NCSTART_INFO=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_SYSDATA=1/ { print NR + 1; exit 0; }' ${SRC}`"
END=$((TO - FROM -1))
;;
"sysdata")
FROM="`awk '/^___NCSTART_SYSDATA=1/ { print NR + 1; exit 0; }' ${SRC}`"
TO="`awk '/^___NCSTART_DATA=1/ { print NR + 1; exit 0; }' ${SRC}`"
BINARY=1
END=0
;;
"data")
FROM="`awk '/^___NCSTART_DATA=1/ { print NR + 1; exit 0; }' ${SRC}`"
BINARY=1
END=0
;;
esac

[ $FROM -ge 0 ] && extractchunk
}


packme()
{

case ${part} in
header)
[ -f "${jailrcconfdir}/rc.conf_${jname}" ] || err 1 "No such rcconf for $jname"
. ${jailrcconfdir}/rc.conf_${jname}

echo "add header"
echo "___NCSTART_HEADER=1_" > ${out}
echo "version=\"1\"" >> ${out}
echo "jname=\"${jname}\"" >> ${out}
echo "compress=\"1\"" >> ${out}
echo "arch=\"${arch}\"" >> ${out}
echo "ver=\"${ver}\"" >> ${out}
DT=`date "+%Y%m%d"`
echo "date=\"${DT}\"" >> ${out}
;;
rcconf)
[ -f "${jailrcconfdir}/rc.conf_${jname}" ] || err 1 "No such rcconf for $jname"
echo "___NCSTART_RCCONF=1" >> ${out}
cat ${jailrcconfdir}/rc.conf_${jname} >> ${out}
;;
pkginfo)
echo "___NCSTART_PKGINFO=1" >> ${out}
PINFO="${jailsysdir}/${jname}/pkg_info"
if [ -f "${PINFO}" ]; then
    cat ${PINFO} >> ${out}
else
    echo "No pinfo" >> ${out}
fi
;;
descr)
echo "___NCSTART_DESCR=1" >> ${out}
DESCR="${jailsysdir}/${jname}/descr"
if [ -f "${DESCR}" ]; then
    cat ${DESCR} >> ${out}
else
    echo "No descr" >> ${out}
fi
;;
info)
echo "___NCSTART_INFO=1" >> ${out}
INFO="${jailsysdir}/${jname}/info"
if [ -f "${INFO}" ]; then
    cat ${INFO} >> ${out}
else
    echo "No info" >> ${out}
fi
;;
fstab)
echo "___NCSTART_FSTAB=1" >> ${out}
[ -f "${jailfstabdir}/${jailfstabpref}${jname}" ] || err 1 "No such fstab for $jname"
cat ${jailfstabdir}/${jailfstabpref}${jname} >> ${out}
;;
sysdata)
echo "add sysdata"
echo "___NCSTART_SYSDATA=1" >> ${out}
cd $jailsysdir
[ -d "$jname" ] || mkdir -p ${jname}
TMPCHUNK="$tmpdir/sys$$.tgz"
trap "rm -f ${TMPCHUNK}" 0 1 2 3 4
tar cfz ${TMPCHUNK} ${jname} --numeric-owner > /dev/null 2>&1
cat ${TMPCHUNK} >> ${out}
echo >> ${out}
;;
data)
[ -f "${jailrcconfdir}/rc.conf_${jname}" ] || err 1 "No such rcconf for $jname"
. ${jailrcconfdir}/rc.conf_${jname}
eval data=\"\$data\"
[ -n "${data}" -a -d "${data}" ] || err 1 "No such data directory $data."
echo "add data"
echo "___NCSTART_DATA=1" >> ${out}
cd `dirname ${data}`
TMPCHUNK="$tmpdir/tmp$$.tgz"
trap "rm -f ${TMPCHUNK}" 0 1 2 3 4
tar cfz ${TMPCHUNK} `basename ${data}` --numeric-owner > /dev/null 2>&1
cat ${TMPCHUNK} >> ${out}
;;
esac

}



# MAIN
case "$mode" in
extract) extractme ;;
pack)
    [ -z "$out" ] && err 1 "out=tofile is mandatory"
    packme
;;
esac

