#!/bin/sh
#v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG=""
MYDESC="Update Network-related information in inventory tables"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
init $*

NICSTABLE="mac type media ip4 ip6 mask4 mask6 status usr1 usr2 usr3"

## net
CREATETABLE="CREATE TABLE IF NOT EXISTS net ( nic TEXT DEFAULT NULL UNIQUE PRIMARY KEY, "

for x in $NICSTABLE; do
    CREATETABLE="${CREATETABLE} ${x} TEXT DEFAULT NULL,"
done

CREATETABLE="${CREATETABLE} nop INTEGER DEFAULT 0 )"

[ ! -h "${dbdir}/local.sqlite" ] && return 0

cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery=DROP TABLE IF EXISTS nics
cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery=${CREATETABLE}

update_sql()
{
    [ -z "${1}" ] && return 0

    local _nic _mac _type _media _ip4 _ip6 _mask4 _mask6 _status _usr1 _usr2 _usr3 _val _main4 _main5

    _nic="${1}"
    _mac=`ifconfig ${_nic} | awk '/ether / {print $2}'`
    _main4=$(ifconfig $1 | awk '/inet / { print $2, $4}' | head -n 1)
    _main5=$(ifconfig $1 | awk '/inet6 / { print $2, $4}' | head -n 1)

    if [ -n "${_main4}" ]; then
        _ip4=${_main4%% *}
        _mask4=${_main4##* }
    fi

    if [ -n "${_main6}" ]; then
        _ip6=${_main6%% *}
        _mask6=${_main6##* }
    fi

    STR="UPDATE net SET "

    for i in $NICSTABLE; do
	eval _val=\$_${i}
	[ -n "${_val}" ] && STR="${STR} ${i} = \"${_val}\","
    done

    STR="${STR} nop = 0 WHERE nic=\"${_nic}\""
    cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery=${STR}
}

#MAIN

NICS=$(/sbin/ifconfig -l)

for i in ${NICS}; do
    INSERTSQL="INSERT INTO net ( nic ) VALUES ( \"${i}\" )"
    cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery=${INSERTSQL} 2>/dev/null
done


for i in ${NICS}; do

    case "${i%%[0-9]*}" in
	ipfw|ppp|sl|lp|faith|fwe|fwip|plip|pfsync|pflog|tun|vboxnet|lo)
	    continue
        ;;
    esac

    update_sql $i
done

GW4=`route -n get 0.0.0.0 2>/dev/null| /usr/bin/awk '/gateway:/{print $2}'`
GW6=`route -n get -inet6 :: 2>/dev/null | /usr/bin/awk '/gateway:/{print $2}'`
FIBS=`sysctl -n net.fibs`

cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery=DROP TABLE IF EXISTS gw
cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery="CREATE TABLE gw ( gw TEXT DEFAULT NULL UNIQUE PRIMARY KEY, val TEXT DEFAULT NULL )"

[ -n "${GW4}" ] && cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery="INSERT INTO gw ( gw,val ) VALUES ( \"gw4\",\"$GW4\" )"
[ -n "${GW6}" ] && cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery="INSERT INTO gw ( gw,val ) VALUES ( \"gw6\",\"$GW6\" )"

if [ ${FIBS} -gt 1 ]; then
    for i in `jot ${FIBS}`; do
        eval FIB4=`setfib ${i} route -n get 0.0.0.0 2>/dev/null| /usr/bin/awk '/gateway:/{print $2}'`
        eval FIB6=`setfib ${i} route -n get -inet6 :: 2>/dev/null | /usr/bin/awk '/gateway:/{print $2}'`
	[ -n "${FIB4}" ] && cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery="INSERT INTO gw ( gw,val ) VALUES ( \"fib4_${i}\", \"$FIB4\" )"
	[ -n "${FIB6}" ] && cbsd inventorysql --dbfile=${dbdir}/local.sqlite --sqlquery="INSERT INTO gw ( gw,val ) VALUES ( \"fib6_${i}\", \"$FIB6\" )"
    done
fi

