#!/usr/local/bin/cbsd
#v10.1.0
MYARG=""
MYOPTARG="mode"
MYDESC="Ncurses based jail creation wizard"
EXTHELP="wf_jcreate.html"
ADDHELP="mode=full for all atributes\n"

. ${subr}
. ${inventory}
. ${settingstui}
. ${tools}
. ${dialog}

init $*

gen_newjail_conf()
{
	local _i _required _mytest _ret

	_required="jname host_hostname ip4_addr ver arch"

	msg_ok="ok"

	for _i in ${_required}; do
		eval _mytest=\$$_i
		if [ -z "${_mytest}" ]; then
			f_dialog_msgbox "${_i} must be not non-empty" "Error"
			return 0
		fi
	done

	# init emulator by arch
	init_target_arch
	gen_jconf
	ERR=$?

	[ $ERR -eq 0 ] || err 1 "${MAGENTA}Bad conf${NORMAL}"
	err 0 ${A}
}

dialog_menu_main()
{
	local title=" ${product} v${myversion} "
	local btitle="$DIALOG_BACKTITLE"
	local prompt="Use menu for construct jail create config file"
	local defaultitem=
	local hline=

	local menu_list="
		'EXIT'		'EXIT'				'Exit jconstruct-tui'
		'profile'	'$(curval profile)'		'Select jail profile for jcreate'
		'pkglist'	'$(curval pkgnum)'		'mark pkg for install from repo'
		'jname'		'$(curval jname)'		'A short jail name'
		'host_hostname'	'$(curval host_hostname)'	'Full (FQDN) jail hostname'
		'ip4_addr'	'$(curval ip4_addr)'		'Assing IP address'
		'ver'		'$(curval ver)'			'choose code base version'
		'baserw'	'$(curval baserw)'		'Jail base is not read-only'
		'mount_ports'	'$(curval mount_ports)'		'Mount for /usr/ports'
		'astart'	'$(curval astart)'		'Autostart with system'
		'interface'	'$(curval interface)'		'Interface selection and aliasing mode'
		'applytpl'	'$(curval applytpl)'		'Apply cbsd templates'
		'floatresolv'	'$(curval floatresolv)'		'Auto correct for jail resolv.conf'
		'arch'		'$(curval arch)'		'target arch'
	" # END-QUOTE

	#dynamic menu
	[ "${vimage_feature}" = 1 ] && menu_list="${menu_list} 'vnet'	'$(curval vnet)'	'Enable virtual stack for jail?'"

	if [ "${mode}" = "full" ]; then
		menu_list="${menu_list} 'path'		'$(curval path)'	'Path to jail mountpoint'"
		# menu_list="${menu_list} 'mount_fstab'	'$(curval mount_fsab)'	'fstab file for local mount'"
		menu_list="${menu_list} 'basename'	'$(curval basename)'	'alternative base name'"
		menu_list="${menu_list} 'data'		'$(cutval data)'	'alternative path to data directory'"
	fi
	menu_list="${menu_list} 'GO'	'PROCEED!'	'PROCEED!'"

	local height width rows
	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	# Obtain default-item from previously stored selection
	f_dialog_default_fetch defaultitem

	local menu_choice
	menu_choice=$( eval $DIALOG \
		--clear                                 \
		--title \"\$title\"                     \
		--backtitle \"\$btitle\"                \
		--hline \"\$hline\"                     \
		--item-help                             \
		--ok-label \"\$msg_ok\"                 \
		--cancel-label \"Exit\"                 \
		${cbsd_help}				\
		${USE_XDIALOG:+--help \"\"}             \
		--default-item \"\$defaultitem\"        \
		--menu \"\$prompt\"                     \
		$height $width $rows                    \
		$menu_list                              \
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)

	local retval=$?
	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"

	# Only update default-item on success
	[ $retval -eq $DIALOG_OK ] && f_dialog_default_store "$menu_choice"

	return $retval
}


#### [ MAIN AREA ] ####
[ ! -f ${localcbsdconf} ] && err 1 "${MAGENTA}no such conf file${NORMAL}"
. ${localcbsdconf}
. ${inventory}

zero_profile="jail-freebsd-default.conf"
#defaults
. ${buildconf}

readconf ${zero_profile}
# re-read profile for init global_profile_file variable
get_construct_profile ${default_profile}
[ -z "${profile}" -a -n "${jail_profile}" ] && profile="${jail_profile}"

f_dialog_title "$msg_system_console_configuration"
f_dialog_backtitle "${ipgm:+bsdconfig }$pgm"
f_mustberoot_init

. ${workdir}/universe.subr

while [ 1 ]; do
	pkgnum=0
	[ -n "${pkglist}" -a "${pkglist}" != "NO" ] && pkgnum=$( wc -l ${pkglist}|awk '{printf $1}' )

	dialog_menu_main
	retval=$?

	if [ $retval -eq $DIALOG_HELP ]; then
		get_help
		continue
	elif [ $retval -ne $DIALOG_OK ]; then
		f_die
	fi

	f_dialog_menutag_fetch mtag

	[ "${mtag}" = "EXIT" ] && exit 0
	[ "${mtag}" = "GO" ] && gen_newjail_conf
	get_construct_${mtag}
done
