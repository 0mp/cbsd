#!/bin/sh
#v9.2.0
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG=""
MYDESC="Ncurses based jail creation wizard"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${settingstui}
. ${color}

init $*


gen_newjail_conf()
{
local _i _required _mytest

    _required="jname fqdn ip4_addr ver arch"

    for _i in ${_required}; do
	eval _mytest=\$$_i
	if [ -z "${_mytest}" ]; then
	    $DIALOG ${BACKTITLE} --title "warning" "$@" \
	            --msgbox "${_i} must be not non-empty" 5 50
	    return 0
	fi
    done

    cbsd jconstruct-fromargs basename=$basename mdsize=$mdsize jname=$jname fqdn=$fqdn ip4_addr=$ip4_addr ver=$ver baserw=$baserw srcmount=$srcmount portsmount=$portsmount astart=$astart interface=$interface vnet=$vnet applytpl=$applytpl floatresolv=$floatresolv arch=$arch pkglist=$pkglist
    ERR=$?

    [ $ERR -eq 0 ] || err 1 "${MAGENTA}Bad conf${NORMAL}"
    err 0 ${A}
}


#### [ MAIN AREA ] ####
globalconf="${workdir}/cbsd.conf";

if [ ! -f ${globalconf} ]; then
    ${ECHO} "${MAGENTA}no such conf file${NORMAL}";
    exit
fi

. ${globalconf}

if [ ! -f ${localcbsdconf} ]; then
    ${ECHO} "${MAGENTA}no such conf file${NORMAL}";
    exit 1
fi

. ${localcbsdconf}
. ${inventory}

#defaults
. ${buildconf}

[ -z "${baserw}" ] && baserw=0
[ -z "${mdsize}" ] && mdsize=0
[ -z "${srcmount}" ] && srcmount=0
[ -z "${portsmount}" ] && portsmount=1
[ -z "${astart}" ] && astart=1
[ -z "${interface}" ] && interface="auto"
[ -z "${vnet}" ] && vnet=0
[ -z "${applytpl}" ] && applytpl=1
[ -z "${floatresolv}" ] && floatresolv=1

while [ 1 ]; do
    pkgnum=0
    [ -n "${pkglist}" -a "${pkglist}" != "NO" ] && pkgnum=`wc -l ${pkglist}|awk '{printf $1}'`

$DIALOG ${BACKTITLE} --clear --title "JConf constructor v${myversion}" \
        --menu "           Welcome to jail constructor script. \n\
\n\
 set all data before creation:" 0 64 19 \
	"pkglist" "mark pkg for install from repo [$pkgnum]" \
        "jname" "A short jail name [${jname}]" \
        "fqdn"  "Full (FQDN) jail hostname [$fqdn]" \
        "ip4_addr" "Assing IP address [$ip4_addr]" \
        "ver" "choose code base version [$ver]" \
        "baserw"  "Write access base [$baserw]" \
        "portsmount" "Mount /usr/ports ? [$portsmount]" \
        "astart"  "Auto start-up with system [$astart]" \
        "interface" "Interface selection and aliasing mode [$interface]" \
        "applytpl"  "Apply cbsd templates [$applytpl]" \
        "floatresolv" "Auto edit jail resolv.conf [$floatresolv]" \
        "arch" "target arch [$arch]" \
        "GO" "PROCEED!" 2> ${TMPFILE}

    retval=$?
    case $retval in
	0)
	choice=`cat ${TMPFILE}`
	rm -f ${TMPFILE}
	[ $choice = "pkglist" ] && get_pkglist
	[ $choice = "jname" ] && get_jname
	[ $choice = "fqdn" ] && get_jail_fqdn
	[ $choice = "ip4_addr" ] && get_jail_ips
	[ $choice = "ver" ] && get_jail_base
	[ $choice = "baserw" ] && get_jail_baserw
	[ $choice = "srcmount" ] && get_jail_srcmount
	[ $choice = "portsmount" ] && get_jail_portsmount
	[ $choice = "astart" ] && get_jail_astart
	[ $choice = "interface" ] && get_jail_oninterface
	[ $choice = "vnet" ] && get_jail_vnet
	[ $choice = "applytpl" ] && get_jail_applytpl
	[ $choice = "floatresolv" ] && get_jail_floatresolv
	[ $choice = "arch" ] && get_jail_arch
	[ $choice = "mdsize" ] && get_jail_mdsize
	[ $choice = "GO" ] && gen_newjail_conf
    ;;
    *)
	exit
    ;;
    esac
	[ "${DIALOG}" = "$XDIALOG" ] && exit
done
