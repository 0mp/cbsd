#!/usr/local/bin/cbsd
#v10.1.0
MYARG=""
MYOPTARG="formfile bootstrap jname"
MYDESC="Ncurses-based jail image boostrap helper"
EXTHELP="wf_imghelper.html"

. ${subr}
. ${inventory}
. ${settingstui}
. ${tools}
. ${strings}
. ${system}
. ${dialog}


if [ "${1}" != "--help" -a "${1}" != "--args" ]; then
	# assume that this is the path to form wheny start with a slash
	echo "${1}" |/usr/bin/grep -q ^/
	if [ $? -eq 0 ]; then
		formfile="${1}"
		[ ! -f "${1}" ] && err 1 "${MAGENTA}No such form file: ${GREEN}${formfile}${NORMAL}"
		shift
		param=$( cbsdsql ${formfile} SELECT param FROM forms ORDER by idx |/usr/bin/xargs )
		MYOPTARG="${MYOPTARG} ${param}"
	fi
fi

init $*

# if all_filled; then
#    echo "ALL FILLED"
# fi
all_filled()
{
	local i _T

	for i in ${param}; do
		eval _T=\${${i}}
		[ -z "${_T}" ] && return 1
	done

	return 0
}



load_forms()
{
	FORMS=$( cbsdsql ${formfile} SELECT param FROM forms ORDER by idx |xargs )
	local _env

	eval $( for i in ${FORMS}; do
		unset _env
		desc="$( cbsdsql ${formfile} SELECT desc FROM forms WHERE param=\"${i}\" )"

		# check for H_environment
		eval _res="\$H_${i}"
		if [ -n "${_res}" ]; then
			# environment is preferred
			echo "${i}=\"${_res}\""
		else
			defaults="$( cbsdsql ${formfile} SELECT defaults FROM forms WHERE param=\"${i}\" )"
			echo "${i}=\"${defaults}\""
		fi

		attr="$( cbsdsql ${formfile} SELECT attr FROM forms WHERE param=\"${i}\" )"
		xattr="$( cbsdsql ${formfile} SELECT xattr FROM forms WHERE param=\"${i}\" )"
		echo "${i}_desc=\"${desc}\""
	done )
}


dialog_menu_main()
{
	local _par VAL
	local btitle="$DIALOG_BACKTITLE"
	local prompt="Use menu for select and edit limit"
	local hline=

	local title=" Image parameters for ${jname} "
	local _mydesc

	local menu_list=

	for _items in ${FORMS}; do
		eval VAL=\$${_items}

		if [ -z "${VAL}" ]; then
			menu_list="${menu_list} '${_items}'	' '	'${_mydesc}'"
		else
			menu_list="${menu_list} '${_items}'	'${VAL}'	'${_mydesc}'"
		fi
	done

	menu_list="${menu_list} 'COMMIT'	'Save changes and quit'	'Save!'"

	local height width rows
	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	# Obtain default-item from previously stored selection
	f_dialog_default_fetch defaultitem

	mtag=$( eval $DIALOG \
		--clear                                 \
		--title \"\$title\"                     \
		--backtitle \"\$btitle\"                \
		--hline \"\$hline\"                     \
		--item-help                             \
		--ok-label \"\$msg_ok\"                 \
		--cancel-label \"Exit\"                 \
		${USE_XDIALOG:+--help \"\"}             \
		--default-item \"\$defaultitem\"        \
		--menu \"\$prompt\"                     \
		$height $width $rows                    \
		$menu_list                              \
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)

	local retval=$?
	f_dialog_data_sanitize mtag
	f_dialog_menutag_store "$mtag"

	# Only update default-item on success
	[ $retval -eq $DIALOG_OK ] && f_dialog_default_store "$mtag"
	return $retval
}

# inputform
get_helper_value()
{
	local _input _retval

	f_dialog_title " ${mtag} "

	eval VAL=\$${mtag}_defaults
	eval _mydesc=\$${mtag}_desc

	f_dialog_input _input "${_mydesc}" "${VAL}" \
		"${_message}" || return $?

	[ -n "${_input}" ] && eval ${mtag}="${_input}"

}

#### [ MAIN AREA ] ####
# we work in two modes:
# when we got bootstrap file ( which shall contain install_img )
# or only formfile ( can be set in boostrap )
#
# When no bootstrap - load and execute form then exist
# when bootstrap exist - after form execute install_img func
#
with_bootstrap=0

if [ -n "${bootstrap}" ]; then

	[ ! -f "${bootstrap}" ] && err 1 "${MAGENTA}No such bootstrap file: ${GREEN}${bootstrap}${NORMAL}"

	[ -z "${jname}" ] && err 1 "${MAGENTA}jname= is necessary for bootstrap${NORMAL}"

	. ${jrcconf}
	[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
	[ ${jid} -ne 0 ] && err 1 "${MAGENTA}Error: jail is active${NORMAL}"

	. ${bootstrap}
	. ${workdir}/universe.subr

	[ -z "${formfile}" ] && err 1 "No such formfile"
	[ ! -f "${formfile}" ] && err 1 "Formfile doesn't exist: ${formfile}"

	[ $baserw -eq 1 ] && path=$data
	[ ! -d "${path}" ] && mkdir -p ${path}

	with_bootstrap=1
else
	[ -z "${formfile}" ] && err 1 "No such formfile"
	[ ! -f "${formfile}" ] && err 1 "Formfile doesn't exist: ${formfile}"
fi

param=$( cbsdsql ${formfile} SELECT param FROM forms ORDER by idx |/usr/bin/xargs )
load_forms
x=1

while [ ${x} -eq 1 ]; do
	dialog_menu_main
	ret=$?
	case $ret in
		${DIALOG_OK})
			case "${mtag}" in
				"COMMIT")
					if all_filled; then
						x=0
						continue
					else
						f_dialog_msgbox "All field is mandatory"
					fi
					continue
					;;
				*)
					get_helper_value
					;;
			esac
			;;
		*)
			f_die
			;;
	esac
done

# no bootrstap? this is the end my beautiful friend
[ ${with_bootstrap} -eq 0 ] && f_die

# Here is boostrap-only area
jstart jname=${jname}
install_img
jstop jname=${jname}
img_message
