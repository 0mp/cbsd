#!/bin/sh
#v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="node"
MYDESC="Fetch sqldb from remove node\n"
ADDHELP="when node argument is empty - retrieve db from all nodes from node lists\n"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${tools}
. ${inventory}
. ${color}
init $*

retr_db()
{
    local _rnode=$1

    [ -z "${_rnode}" ] && return 0

    cbsd nodescp ${_rnode}:var/db/local.sqlite ${dbdir}/${_rnode}.sqlite && chown ${cbsduser} "${dbdir}/${_rnode}.sqlite"
    if [ $? -eq 0 ]; then
	$ECHO "${MAGENTA}Fetching inventory done: ${GREEN}${_rnode}${NORMAL}"
    else
	$ECHO "${MAGENTA}Fetching inventory failed: ${GREEN}${_rnode}${NORMAL}"
    fi
}

retr_nodedescr()
{
    local _rnode=$1 _files _i

    [ -z "${_rnode}" ] && return 0

    [ ! -d "${dbdir}/nodedescr" ] && mkdir -m 0700 -p "${dbdir}/nodedescr" && chown ${cbsduser} "${dbdir}/nodedescr"

    _files="descr role domain notes location"

    for _i in ${_files}; do
	cbsd nodescp ${_rnode}:node.${_i} ${dbdir}/nodedescr/${_rnode}.${_i} 2>/dev/null && chown ${cbsduser} "${dbdir}/nodedescr/${_rnode}.${_i}" 2>/dev/null
    done
}


retr_jdescr()
{
    local _rnode=$1 _jails

    [ -z "${_rnode}" ] && return 0

    [ ! -f "${dbdir}/${_rnode}.sqlite" ] && return 0
    [ ! -d "${dbdir}/nodedescr" ] && mkdir -p "${dbdir}/nodedescr"

    _jails=`cbsd -c "cbsdsql ${_rnode} select jname from jails"`

    for _i in ${_jails}; do
	cbsd nodescp ${_rnode}:jails-system/${_i}/descr ${dbdir}/nodedescr/${_rnode}.${_i}.descr 2>/dev/null && chown ${cbsduser} "${dbdir}/nodedescr/${_rnode}.${_i}.descr" 2>/dev/null
    done
}






if [ -n "${node}" ]; then
    retr_db ${node}
    retr_nodedescr ${node}
    retr_jdescr ${node}
else
    for i in `cbsd node mode=list`; do
	retr_db ${i}
	retr_nodedescr ${i}
	retr_jdescr ${i}
    done
fi
