#!/bin/sh
#v10.0.5
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG=""
MYDESC="Ncurses based jail creation wizard"
EXTHELP="wf_jcreate.html"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${settingstui}
. ${color}
. ${dialog}
. ${workdir}/bhyve.subr

init $*

gen_newjail_conf()
{
    local _i _required _mytest _ret

    _required="jname fqdn ip4_addr ver arch freesize"

    msg_ok="ok"

    for _i in ${_required}; do
	eval _mytest=\$$_i
	if [ -z "${_mytest}" ]; then
	    f_dialog_msgbox "${_i} must be not non-empty" "Error"
	    return 0
	fi
    done

    #check for ip if oninterface
    if [ "${interface}" != "0" -a -n "${ip4_addr}" ]; then
	cbsd checkip ip=${ip4_addr} check=1 2>/dev/null
	case $? in
	    2)
		msg_yes="ok"
		msg_no="not ok"
		f_dialog_noyes "It seems like ${ip4_addr} address already used on several devices on the LAN\nYou can found MAC address by \"arp -an\" command.\n If you believe that it's ok, choose 'ok' to continue or 'not ok' for another IP address" "WARNING"
		case $? in
		    0)
			;;
		    *)
			return 0
		esac
	esac
    fi
    cbsd bconstruct-fromargs gw4=${gw4} vm_cpus=${vm_cpus} vm_ram=${vm_ram} vm_os_type=${vm_os_type} basename=$basename freesize=$freesize jname=$jname fqdn=$fqdn ip4_addr=$ip4_addr ver=$ver astart=$astart interface=$interface applytpl=$applytpl floatresolv=$floatresolv arch=$arch pkglist=$pkglist vm_os_profile="${vm_os_profile}"
    ERR=$?

    [ $ERR -eq 0 ] || err 1 "${MAGENTA}Bad conf${NORMAL}"
    err 0 ${A}
}


#### [ MAIN AREA ] ####
[ ! -f ${globalconf} ] && err 1 "${MAGENTA}no such conf file${NORMAL}"
. ${globalconf}

[ ! -f ${localcbsdconf} ] && err 1 "${MAGENTA}no such conf file${NORMAL}"
. ${localcbsdconf}
. ${inventory}

#defaults
. ${buildconf}

init_bhyve

readconf jail.conf
baserw=1
ip4_addr="0"

msg_ok="Ok"
msg_cancel="Cancel"

while [ 1 ]; do
    pkgnum=0
    [ -n "${pkglist}" -a "${pkglist}" != "NO" ] && pkgnum=`wc -l ${pkglist}|awk '{printf $1}'`

    menu_list="
    'vm_os_type' 'Guest OS type $(curval vm_os_type)'
    'vm_os_profile' 'Guest OS profile $(curval vm_os_profile)'
    'freesize' 'reserved (expand) X size for free space $(curval freesize)'
    'jname' 'A short jail name $(curval jname)'
    'fqdn'  'Full (FQDN) jail hostname $(curval fqdn)'
    'vm_ram' 'RAM $(curval vm_ram)'
    'vm_cpus' 'CPUs number $(curval vm_cpus)'
    'astart'  'Auto start-up with system $(curval astart)'
    'interface' 'Interface selection and aliasing mode $(curval interface)'
    "

    #dynamic menu
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'pkglist' 'mark pkg for install from repo $(curval pkgnum)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'ip4_addr' 'Assing IP address $(curval ip4_addr)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'gw4' 'Default router for bhyve or vimage $(curval gw4)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'ver' 'choose code base version $(curval ver)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'applytpl'  'Apply cbsd templates $(curval applytpl)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'floatresolv' 'Auto correct for jail resolv.conf $(curval floatresolv)'"
    [ "${vm_os_type}" = "freebsd" ] && menu_list="${menu_list} 'arch' 'target arch $(curval arch)'"

    menu_list="${menu_list} 'GO' 'PROCEED!'"

    f_dialog_menu
    retval=$?
    f_dialog_menutag_fetch mtag
    case $retval in
	0)
	    [ $mtag = "pkglist" ] && get_pkglist
	    [ $mtag = "jname" ] && get_jname
	    [ $mtag = "fqdn" ] && get_jail_fqdn
	    [ $mtag = "ip4_addr" ] && get_jail_ips
	    [ $mtag = "ver" ] && get_jail_base
	    [ $mtag = "astart" ] && get_jail_astart
	    [ $mtag = "interface" ] && get_jail_oninterface
	    [ $mtag = "applytpl" ] && get_jail_applytpl
	    [ $mtag = "floatresolv" ] && get_jail_floatresolv
	    [ $mtag = "arch" ] && get_jail_arch
	    [ $mtag = "freesize" ] && get_jail_freesize
	    [ $mtag = "gw4" ] && get_jail_gw4
	    [ $mtag = "vm_ram" ] && get_jail_ram
	    [ $mtag = "vm_cpus" ] && get_jail_cpus
	    [ $mtag = "vm_os_type" ] && get_jail_type
	    [ $mtag = "vm_os_profile" ] && get_jail_profile
	    [ $mtag = "GO" ] && gen_newjail_conf
	    ;;
	*)
	    exit
	    ;;
    esac
done
