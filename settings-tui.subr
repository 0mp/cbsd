#!/bin/sh
DIALOG=${DIALOG=/usr/bin/dialog}
XDIALOG="/usr/local/bin/cbsddialog"
TMPFILE="${ftmpdir}/inputbox.$$"
BACKTITLE="--backtitle \Z1${0}\Zn --colors"

let()
{
    local P1=${1%%=*}
    local P2=${1##*=}
    local MYFILE="${ftmpdir}/`basename $0`.wbdlg"

    if [ -f "${MYFILE}"  ]; then
	if [ `/usr/bin/grep -c ^${P1}= ${MYFILE}` = 1 ]; then
	    mv ${MYFILE} ${MYFILE}.tmp
	    grep -v ^${P1} ${MYFILE}.tmp > ${MYFILE}
	    rm -f ${MYFILE}.tmp
	else
	    echo $1 >> ${MYFILE}
	fi
    else
	echo $1 > ${MYFILE}
    fi

    export $1
}

freejname()
{
    local _num
    _num=1

    for _num in `jot 100`; do
	freejname="jail${_num}"
	cbsd jstatus jname=${freejname} > /dev/null 2>&1
	[ $? -eq 0 ] && return 0
    done
}

# $pkglist
get_pkglist()
{
    pkglist="${ftmpdir}/tui.$$"
    cbsd pkgbrowser out="${pkglist}"

    if [  -f "${pkglist}" ]; then
	let pkglist=${pkglist}
    else
	let pkglist="NO"
    fi
}

# $jname
get_jname()
{
    freejname

    $DIALOG --backtitle "$0" --title "jname" --clear --inputbox "jail short name (one word):" 0 0 "${freejname}" 2> ${TMPFILE}
    retval=$?

    case $retval in
    0)
	input=`cat ${TMPFILE}`
	echo $input >> /tmp/bla
	;;
    esac

    [ -n "${input}" ] && let jname=$input
}



# $fqdn
get_jail_fqdn() {
    if [ -z ${jname} ]; then
	$DIALOG --backtitle "$0" --title "fqdn" --clear --inputbox "jail FQDN (one word):" -1 -1 "jail1.my.domain" 2> ${TMPFILE}
    else
	$DIALOG --backtitle "$0" --title "fqdn" --clear --inputbox "jail FQDN (one word):" -1 -1 "${jname}.my.domain" 2> ${TMPFILE}
    fi

    retval=$?

    case $retval in
    0)	input=`cat ${TMPFILE}`
	;;
    esac

    rm -f ${TMPFILE}
    export fqdn=$input
}

# $ips
get_jail_ips() {
    $DIALOG --backtitle "$0" --title "ips" --clear --inputbox "Enter jail ip (from CBSD pool) \n use IP/PREFIX form: ${nodeippool} " -1 -1 "${ip4_addr}" 2> ${TMPFILE}
    retval=$?

    case $retval in
	0)  input=`cat ${TMPFILE}`
	    ;;
    esac

    rm -f ${TMPFILE}
    export ip4_addr=$input
}

# $interface
get_jail_oninterface() {
    [ -z "${interface}" -o "${interface}" = "auto" ] && {
	if [ -n "${ip4_addr}" ]; then
	    interface=`cbsd getnics-by-ip ip=${ip4_addr}`
	else
	    interface=`cbsd getnics-by-ip ip=0.0.0.0`
	fi
    }

    $DIALOG --backtitle "$0" --title "interface" --clear --inputbox "Auto create and remove IP on selected nics (0 for disable):" -1 -1 "${interface}" 2> ${TMPFILE}
    retval=$?

    case $retval in
    0) input=`cat ${TMPFILE}`
       ;;
    esac

    rm -f ${TMPFILE}
    export interface=$input
}

# $vnet
get_jail_vnet() {
$DIALOG --backtitle "$0" --title "vnet" --clear --yesno "Jail with VIMAGE feature?" 5 40
    case $? in
	0) st=1
	   ;;
	1) st=0
	   ;;
	255) echo "ESC pressed."
	   ;;
    esac

    export vnet=$st
}

# $base
get_jail_base()
{
$DIALOG --backtitle "$0" --title "base" --clear --inputbox "choose jail base source:" -1 -1 "${ver}" 2> ${TMPFILE}
retval=$?

case $retval in
  0)
    input=`cat ${TMPFILE}`;;
esac
rm -f ${TMPFILE}

export ver=$input
}

# $baserw
get_jail_baserw()
{
$DIALOG --title "baswrw" --clear --yesno "Write access for base (no nullfs mount)?" 5 66
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac

export baserw=$st
}

# $srcmount
get_jail_srcmount()
{
echo "Jail with /usr/src via nullfs[y/n]: "
$DIALOG --backtitle "$0" --title "srcmount" --clear --yesno "Jail with shared /usr/src? " 5 66
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac

export srcmount=$st
}

# $objmount
get_jail_objmount()
{
st=

while [ x$st = x ]; do
echo "Jail with share /usr/obj [y/n]: "

read reply leftover
    case $reply in
         y* | Y*)
            st=1
                        ;;
                n* | n*)
	    st=0
                        ;;
        esac
done

export objmount=$st
}

# $portsmount
get_jail_portsmount()
{
$DIALOG --backtitle "$0" --title "portsmount" --clear --yesno "Jail with shared /usr/ports" 5 66
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac

export portsmount=$st
}


# $applytpl
get_jail_applytpl()
{
$DIALOG --backtitle "$0" --title "applytpl" --clear --yesno "Apply standart CBSD template when jail create" 5 66
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac
export applytpl=$st
}

# $floatresolv
get_jail_floatresolv()
{
$DIALOG --backtitle "$0" --title "floatresolv" --clear --yesno "Float resolv (recommended)" 5 66
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac
export floatresolv=$st
}

# $arch
get_jail_arch()
{
$DIALOG --backtitle "$0" --title "arch" --clear --inputbox "Enter target arch (i386 or amd64):" -1 -1 "`uname -p`" 2> ${TMPFILE}

retval=$?

case $retval in
  0)
    input=`cat ${TMPFILE}`;;
esac
rm -f ${TMPFILE}

export arch=$input
}

get_jail_mdsize()
{
$DIALOG --backtitle "$0" --title "arch" --clear --inputbox "Enter size for images:" -1 -1 "2g" 2> ${TMPFILE}

retval=$?

case $retval in
  0)
    input=`cat ${TMPFILE}`;;
esac
rm -f ${TMPFILE}

export mdsize=$input
}

# $astart
get_jail_astart()
{
$DIALOG --backtitle "$0" --title "astart" --clear --yesno "Jail auto startup with system?" 5 60
case $? in
  0)
    st=1;;
  1)
    st=0;;
  255)
    echo "ESC pressed.";;
esac

export astart=$st
}

