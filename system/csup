#!/bin/sh
#v10.0.6
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="ver stable rev svnbase dst"
MYDESC="CSUP from official cvsup server"
ADDHELP="ver=head for current.\n\
stable=1 for STABLE_X\n\
rev=XXX where XXX - svn revision\n\
svnbase - alt. svn base, default: svn://svn.freebsd.org/base\n\
dst - alternative dst dir\n"

set -e

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
init $*

. ${buildconf}
readconf buildworld.conf
. ${color}
. ${workdir}/universe.subr

init_distcc
init_notify
init_target_arch
init_srcdir
init_supported_arch
init_make_flags

SVN=""

if [ -f "/usr/bin/svnlite" ]; then
	SVN="/usr/bin/svnlite"
elif [ -f "/usr/local/bin/svn" ]; then
	SVN="/usr/local/bin/svn"
else
	err 1 "${MAGENTA}No svn in the base. Please install subversion${NORMAL}"
fi

[ -z "${svnbase}" ] && svnbase="svn://svn.freebsd.org/base"

set +e
. ${buildconf}
set -e

if [ "${stable}" = "1" ]; then
	SVN_URL="${svnbase}/stable/${ver}"
else
	SVN_URL="${svnbase}/releng/${ver}"
fi

if [ -n "${dst}" ]; then
	dst="${srcdir}/src_${ver}/src"
else
	dst="${SRC_DIR}"
fi

LOCKFILE=${ftmpdir}/src_$( md5 -qs ${dst} ).lock
makelock ${LOCKFILE}

[ ! -d "${dst}" ] && /bin/mkdir -p ${dst}

[ "$ver" = "11.0" -o "${ver}" = "11" ] && SVN_URL="${svnbase}/head"

if [ -d "${dst}/.svn" ]; then
	cd ${dst}
	${SVN} cleanup > /dev/null 2>&1
	${SVN} upgrade > /dev/null 2>&1
	${SVN} cleanup > /dev/null 2>&1
fi

${SVN} checkout -r ${rev} ${SVN_URL} ${dst}

case "${ver}" in
9*)
	set +e
	[ -f "${distdir}/upgrade/patch/patch-9x-sys-sys-param.h" ] && cd ${dst}/sys/sys/ && patch --check -N < ${distdir}/upgrade/patch/patch-9x-sys-sys-param.h > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch for: ${GREEN}MAXLOGNAME${NORMAL}" && patch < ${distdir}/upgrade/patch/patch-9x-sys-sys-param.h
	set -e
	# ---
	#    ${ECHO} "${MAGENTA}apply patch for: ${GREEN}pr=180236${NORMAL}"
	#    [ -f "${distdir}/upgrade/patch/patch-9x-sys-fs-nullfs-null_vnops.c" ] && cd ${dst}/sys/fs/nullfs && patch --check -N < ${distdir}/upgrade/patch/patch-9x-sys-fs-nullfs-null_vnops.c
	#    [ $? -eq 0 ] && patch < ${distdir}/upgrade/patch/patch-9x-sys-fs-nullfs-null_vnops.c
	;;
11*)
	set +e
	[ -f "${distdir}/upgrade/patch/kmem/patch-11x-sys-kern-kern_jail.c" ] && cd ${dst}/sys/kern/ && patch --check -N < ${distdir}/upgrade/patch/kmem/patch-11x-sys-kern-kern_jail.c > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch-11x-sys-kern-kern_jail.c patch for: ${GREEN}allow_kmem${NORMAL}" && patch < ${distdir}/upgrade/patch/kmem/patch-11x-sys-kern-kern_jail.c
	[ -f "${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm-drmP.h" ] && cd ${dst}/sys/dev/drm/ && patch --check -N < ${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm-drmP.h > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch-11x-sys-dev-drm-drmP.h patch for: ${GREEN}allow_kmem${NORMAL}" && patch < ${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm-drmP.h
	[ -f "${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm2-drmP.h" ] && cd ${dst}/sys/dev/drm2/ && patch --check -N < ${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm2-drmP.h > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch-11x-sys-dev-drm2-drmP.h patch for: ${GREEN}allow_kmem${NORMAL}" && patch < ${distdir}/upgrade/patch/kmem/patch-11x-sys-dev-drm2-drmP.h
	[ -f "${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-jail.h" ] && cd ${dst}/sys/sys/ && patch --check -N < ${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-jail.h > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch-11x-sys-sys-jail.h patch for: ${GREEN}allow_kmem${NORMAL}" && patch < ${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-jail.h
	[ -f "${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-priv.h" ] && cd ${dst}/sys/sys/ && patch --check -N < ${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-priv.h > /dev/null 2>&1
	[ $? -eq 0 ] && $ECHO "${MAGENTA}apply patch-11x-sys-sys-priv.h patch for: ${GREEN}allow_kmem${NORMAL}" && patch < ${distdir}/upgrade/patch/kmem/patch-11x-sys-sys-priv.h
	set -e
	;;
esac

if [ ! -f "${dst}/Makefile" ]; then
	/bin/rm -rf ${dst}
	err 1 "No source code for ${ver}"
fi
