#!/usr/local/bin/cbsd
#v10.1.2
MYARG="jname size vm_os_type"
MYOPTARG="login pw ip4_addr gw authkey host_hostname listenip convectix_ssh_privatekey"
MYDESC="Resize VMs disk"
ADDHELP="listenip - connect from resizer to this ip. by default is nodeip"
CBSDMODULE="convectix"

. ${subr}
. ${system}
. ${strings}
. ${workdir}/universe.subr
. ${workdir}/bhyve.subr
. ${tools}
init $*

if [ -z "${login}" ]; then
	orig_login=0
else
	orig_login="${login}"
fi

if [ -z "${pw}" ]; then
	orig_pw=0
else
	orig_pw="${pw}"
fi

if [ -z "${ip4_addr}" ]; then
	orig_ip4_addr=0
else
	orig_ip4_addr="${ip4_addr}"
fi

if [ "${orig_ip4_addr}" = "DHCP" ]; then
	orig_ip4_addr=$( dhcpd )
fi

if [ -z "${gw}" ]; then
	orig_gw=0
else
	orig_gw="${gw}"
fi

if [ -z "${authkey}" ]; then
	orig_authkey=0
else
	orig_authkey="${authkey}"
fi

if [ -z "${host_hostname}" ]; then
	orig_host_hostname=0
else
	orig_host_hostname="${host_hostname}"
fi

if [ -z "${vm_os_type}" ]; then
	orig_vm_os_type=0
else
	orig_vm_os_type="${vm_os_type}"
fi

if [ "${orig_authkey}" != "0" ]; then
	[ ! -r "${orig_authkey}" ] && err 1 "${MAGENTA}No such pubkey: ${GREEN}${orig_authkey}${NORMAL}"
fi

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ "${emulator}" != "bhyve" ] && err 1 "${MAGENTA}Only for bhyve type VMs${NORMAL}"

lockfile="/tmp/make_ctld.lock"

[ -f ${lockfile} ] && err 1 "Already locked $lockfile"

readconf freecloud.conf

# client IP
case "${orig_vm_os_type}" in
	linux)
		[ -z "${convectix_srv4linux_ip}" -o "${convectix_srv4linux_ip}" = "unset" ] && err 1 "${MAGENTA}Please set in freecloud.conf: ${GREEN}convectix_srv4linux_ip${NORMAL}"
		consumerip="${convectix_srv4linux_ip}"
		;;
	freebsd)
		[ -z "${convectix_srv4freebsd_ip}" -o "${convectix_srv4freebsd_ip}" = "unset" ] && err 1 "${MAGENTA}Please set in freecloud.conf: ${GREEN}convectix_srv4freebsd_ip${NORMAL}"
		consumerip="${convectix_srv4freebsd_ip}"
		;;
	*)
		err 1 "vm_resize: Unsupported type $vm_os_type"
		;;
esac

[ -z "${listenip}" ] && listenip="${nodeip}"

config="/etc/ctl.conf"

if [ -z "${convectix_ssh_privatekey}" ]; then
	_md5name=$( /sbin/md5 -qs ${nodename} )
	convectix_ssh_privatekey="${sshdir}/${_md5name}.id_rsa"
fi

ssh_cmd="/usr/bin/ssh -tt -oPort=22 -i ${convectix_ssh_privatekey} root@${consumerip}"
scp_cmd="/usr/bin/scp -i ${convectix_ssh_privatekey}"

target="iqn.${consumerip}:target0"

${ssh_cmd} -C date > /dev/null 2>&1

[ $? -ne 0 ] && err 1 "No ssh connection with resizer service: ${ssh_cmd}"

/usr/bin/touch ${lockfile}
trap "/etc/rc.d/ctld onestop > /dev/null 2>&1; /bin/rm -f ${lockfile}" HUP INT ABRT BUS TERM EXIT

. ${zfstool}

is_getzvol ${data}/dsk1.vhd

if ! is_getzvol ${data}/dsk1.vhd; then
	err 1 "${MAGENTA}${data}/dsk1.vhd not on zvol${NORMAL}"
fi

zvolpath="/dev/zvol/${is_zvol}"
echo "MyZVOL: $is_zvol, MyPATH: ${zvolpath}"

[ ! -c "${zvolpath}" ] && err 1 "No such $zvolpath"
/sbin/zfs set volsize=${size}g ${is_zvol}
echo ":: $is_zvol resized to ${size}g"

if [ -z "${size}" ]; then
	echo "No such size"
	exit 1
fi

cat > ${config} << EOF

#isns-server ${listenip}

portal-group pg0 {
	discovery-auth-group no-authentication
	listen ${listenip}
#	listen [::]
}

target ${target} {
	auth-group no-authentication
	portal-group pg0

	lun 0 {
		path ${zvolpath}
		# size ${size}G
		#option vendor "FreeBSD"
	}
}

EOF

chmod 0400 ${config}
/etc/rc.d/ctld onestart

case "${vm_os_type}" in
	linux)
cat << EOF
Use for Linux:
scan:
iscsiadm -m discovery -t st -p ${listenip}
EOF
		eval $( ${ssh_cmd} -C iscsiadm -m discovery -t st -p ${listenip} 2>/dev/null |tr -d \\r |while read _iremote _itarget; do
			x=$( echo $_iremote |awk '{printf $1}' )
			y=$( echo $_itarget |awk '{printf $1}' )
			echo "iremote=\"$x\""
			echo "itarget=\"$y\""
		done )
		;;
	freebsd)
cat << EOF
Use for FreeBSD:
scan:
iscsictl -A -p ${listenip} -t ${target}
EOF
		sleep 3
		iremote="nop"
		${ssh_cmd} iscsictl -A -p ${listenip} -t iqn.${convectix_srv4freebsd_ip}:target0
		itarget=$( ${ssh_cmd} iscsictl | grep ^iqn |awk '{printf $1}' )
		;;
esac


if [ "${target}" != "${itarget}" ]; then
	err 1 "local target not equal with remote: ${target} vs ${itarget}"
fi

echo "Ready: ${iremote} ${itarget}"

pubkeyarg=

if [ "${orig_authkey}" != "0" ]; then
	${ssh_cmd} -C rm -f /tmp/authorized_keys
	${scp_cmd} ${orig_authkey} ${consumerip}:/tmp/authorized_keys
	pubkeyarg="-a /tmp/authorized_keys"
fi

echo "/root/a.sh -r ${iremote} -t ${itarget} -s ${size} -l $orig_login -p $orig_pw -i $orig_ip4_addr -g $orig_gw -h $orig_host_hostname ${pubkeyarg}"
echo
${ssh_cmd} -C /root/a.sh -r ${iremote} -t ${itarget} -s ${size} -l $orig_login -p $orig_pw -i $orig_ip4_addr -g $orig_gw -h $orig_host_hostname ${pubkeyarg}

if [ "${vm_os_type}" = "freebsd" ]; then
	${ssh_cmd} iscsictl -Ra
fi

rm -f ${lockfile}

#read p
#sleep 5
#/etc/rc.d/ctld onestop
