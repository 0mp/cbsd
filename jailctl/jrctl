#!/bin/sh
# v9.2.0
globalconf="${workdir}/cbsd.conf";
MYARG="mode jname"
MYOPTARG=""
MYDESC="Set or flush resource limit for jail"
ADDHELP="mode= set (apply), unset, show (show current state) or get (show limits)"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
init $*

JAILRCCONF="${jailrcconfdir}/rc.conf_${jname}"
[ -f  ${JAILRCCONF} ] || err 1 "no conf rc.conf file for jail"
. ${JAILRCCONF}


jail_rctl() {

    local _action _str _p _out

    case ${mode} in
	"set")
	    _action="rctl -a "
	    ;;
	"unset")
	    _action="rctl -r "
	    ;;
	"show")
	    rctl -hu jail:${jname}
	    return 0
	    ;;
	"get")
	    # Here must be
	    # rctl -l jail:$jname::=/
	    # or
	    # rctl -u jail:$jname::=/
	    # but it still unusable or crashed
	    [ -f "${LIMITS}" ] && cat ${LIMITS}
	    return 0
	    ;;
	*)
	    err 1 "Unknown mode"
    esac

    [ ! -f "${LIMITS}"  ] && exit 0
    printf "\033[40;35m${mode} resource limit: [ \033[40;33m"
    cat ${LIMITS} |while read _p; do
	_str="${_action} jail:${jname}:$_p"
	_out=`eval $_str`
	[ $? -eq 0 ] && printf "${_p} "
    done
    printf "\033[40;35m]\033[0m\n"
}

#main
LIMITS="${jailsysdir}/${jname}/jail.limits"
[ ! -d "${jailsysdir}/${jname}" ] && mkdir -p ${jailsysdir}/${jname}
RACCT=`sysctl -qn kern.features.racct`
[ "${RACCT}" != "1" ] && err 0 "Your kernel doesn't have RACCT/RCTL support. Skip for resource limit"

jail_rctl
