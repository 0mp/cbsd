#!/bin/sh
# v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG="jname"
MYOPTARG=""
MYDESC="Dialog based UI for RACCR/RCTL"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${dialog}
. ${strings}

init $*

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"

choice_commit()
{
    local _myval _num _items
    _num=0

    for _items in ${CBSD_RCTL}; do
	eval _myval=\$${_items}_val
	if [ "$_myval" != "0" ]; then
	    [ ${_num} -eq 0 ] && truncate -s0 ${LIMITS}
	    echo "${_items}:deny=${_myval}" >> ${LIMITS}
	    _num=$((_num+1))
	fi
    done

## extra
    for _items in ${CBSD_RCTL_EXTRA}; do
	eval _myval=\$${_items}_val
	if [ "$_myval" != "0" ]; then
	    [ ${_num} -eq 0 ] && truncate -s0 ${LIMITS}.extra
	    echo "${_items}_val=\"${_myval}\"" >> ${LIMITS}.extra
	    _num=$((_num+1))
	fi
    done
## extra


    if [ ${_num} -eq 0 ]; then
	rm -f "${LIMITS}" "${LIMITS}.extra"
	err 0 "CTL cleaned"
    else
	err 0 "New RCTL commited"
    fi
}

load_limits()
{
    local _str

    [ -f "${LIMITS}" ] &&  eval `tr ":=" " " < ${LIMITS} | awk -F " " '{printf("%s_val=\"%s\"\n", $1,$3); }'`
    [ -f "${LIMITS}.extra" ] && eval `cat ${LIMITS}.extra`
#eval `cat ${LIMITS}.extra`
#echo $fsquota
#read p
}

#adjust default settings
reset_limits()
{
    for items in ${CBSD_RCTL} ${CBSD_RCTL_EXTRA}; do
	eval ${items}_val="\$${items}_default"
    done
}

mychoice()
{
    local _mydesc _retval _myval

    eval _mydesc=\$${choice}_desc
    eval _myval=\$${choice}_val

    f_dialog_input _input "${_mydesc}" "${_myval}"
   _retval=$?

    case ${_retval} in
    0)
	[ -n "${_input}" ] && eval ${choice}_val="${_input}"
	;;
    esac
}



#main
LIMITS="${jailsysdir}/${jname}/jail.limits"
RACCT=`sysctl -qn kern.features.racct`
[ "${RACCT}" != "1" ] && err 0 "${MAGENTA}Kernel doesn't have RACCT/RCTL support. Skip for resource limit${NORMAL}"
[ ! -d "${jailsysdir}/${jname}" ] && mkdir -p ${jailsysdir}/${jname}

. ${sharedir}/rctl.conf

TMPFILE="${ftmpdir}/inputbox.$$"
_menufile="${ftmpdir}/choicerepo.$$"
trap "rm -f ${TMPFILE} ; rm -f ${_menufile}" EXIT

reset_limits
load_limits

msg_extra="Reset"

    while [ 1 ]; do
	menu_list=""

	for items in ${CBSD_RCTL} ${CBSD_RCTL_EXTRA}; do
	    eval myval=\$${items}_val
	    menu_list="${menu_list} '${items}' '${myval}'"
	done

	menu_list="${menu_list} 'COMMIT' ''"
	f_dialog_menu
	retval=$?
	f_dialog_menutag_fetch mtag
	choice=${mtag}

	case $retval in
	    0)
		case "${mtag}" in
		    "COMMIT")
			    choice_commit
			    ;;
		    *)
			    mychoice
			    ;;
		esac
		;;
	    3)
		reset_limits
		;;
	    *)
		exit
		;;
	esac
    done
