#!/bin/sh
#v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG=""
MYOPTARG="jname list newjname"
#mode=ls
MYDESC="Import jail from image"
ADDHELP="list=1 for list images\n\
newjname=namename - import image and register as newname jail\n"
CBSDMODULE="jail"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${inventory}
. ${tools}
. ${color}
init $*

if [ -n "$list" ]; then
    ls -1 ${importdir} |grep .img$ |sed 's/\.img//g'
    exit
fi

[ -z "${jname}" ] && jname=$1
[ -z "${jname}" ] && err 1 "${MAGENTA}Give me jname or full path${NORMAL}"

DATA="${importdir}"
SRC="${DATA}/${jname}.img"

if [ ! -f "${SRC}" ]; then
	SRC=$jname
	[ ! -f "${SRC}" ] && err 1 "${MAGENTA}No such jail or image here: ${GREEN}${SRC}${NORMAL}"
fi

TMPDIR="${ftmpdir}/header.$$"
cbsd imgpart mode=extract jname=${SRC} part=header out=${TMPDIR}

[ ! -f "${TMPDIR}" ] && err 1 "${MAGENTA}No header info extracted${NORMAL}"

. "$TMPDIR"
[ -z "${hdrver}" ] && hdrver=0
origjname=${jname}
rm -f "${TMPDIR}"
[ -n "${newjname}" ] && jname=${newjname}
cbsd jstatus jname=$jname > /dev/null 2>&1
[ $? -eq 0 ] || err 1 "${MAGENTA}Jail already exist: ${GREEN}${jname}${NORMAL}"

JAILDIR="${jaildatadir}/${jname}-${jaildatapref}"
JAILFSTAB="${jailfstabdir}/${jailfstabpref}${jname}"
JAILLOCALFSTAB="${jailfstabdir}/${jailfstabpref}${jname}.local"
JAILRCCONF="${jailrcconfdir}/rc.conf_${jname}"

# check for already existance and offline
[ -d "${JAILDIR}" ] &&  err 1 "${MAGENTA}Jail datadir for ${jname} already exist. Please check and remove first: ${GREEN}${JAILDIR}${NORMAL}"

cbsd imgpart mode=extract jname=${SRC} part=rcconf out=${JAILRCCONF} hdrver=${imgver}

trap "rm -f ${JAILRCCONF}" HUP INT ABRT BUS TERM EXIT

[ "${origjname}" != "${jname}" ] && sed -i '' s:${origjname}:${jname}:g ${JAILRCCONF}

sysrc -qf ${JAILRCCONF} path=${jaildir}/${jname} > /dev/null
sysrc -qf ${JAILRCCONF} mount_fstab=${jailfstabdir}/${jailfstabpref}${jname} >/dev/null
sysrc -qf ${JAILRCCONF} data=${jaildatadir}/${jname}-${jaildatapref} >/dev/null
sysrc -qf ${JAILRCCONF} rcconf=${jailrcconfdir}/${jname}-rcconf >/dev/null

. ${JAILRCCONF}
cbsd imgpart mode=extract jname=${SRC} part=fstab out=${JAILFSTAB} hdrver=${imgver}
[ "${origjname}" != "${jname}" ] && sed -i '' s:${origjname}:${jname}:g ${JAILFSTAB}
cbsd replacewdir file0="${JAILFSTAB}" file1="${JAILRCCONF}" old="CBSDROOT"

if [ "${origjname}" != "${jname}" ]; then
	mkdir -p ${jailsysdir}/tmp.$$
	cbsd imgpart mode=extract jname=${SRC} part=sysdata out=${jailsysdir}/tmp.$$ hdrver=${imgver} > /dev/null
	[ -d "${jailsysdir}/${jname}" ] && rm -rf ${jailsysdir}/${jname}
	[ -d "${jailsysdir}/tmp.$$/${origjname}" ] && mv ${jailsysdir}/tmp.$$/${origjname} ${jailsysdir}/${jname}
	rmdir ${jailsysdir}/tmp.$$
else
	cbsd imgpart mode=extract jname=${SRC} part=sysdata out=${jailsysdir} hdrver=${imgver} > /dev/null
fi

if [ ${hdrver} -ge 2 ]; then
	cbsd imgpart mode=extract jname=${SRC} part=localfstab out=${JAILLOCALFSTAB} hdrver=${imgver}
fi

if [ "${origjname}" = "${jname}" ]; then
	case $zfsfeat in
		0)
			mkdir ${JAILDIR}
			;;
		1)
			. $zfstool
			ZPOOL=$( /sbin/zfs get -Ho value name ${jaildatadir} )
			if [ -n "${ZPOOL}" ]; then
				if zfsroot $jname; then
					err 1 "ZFS with $jname in pool already exist"
				fi
				/sbin/zfs create -o atime=off -o mountpoint=${JAILDIR} ${ZPOOL}/$jname
			fi
			;;
	esac
	cbsd imgpart mode=extract jname=${SRC} part=data out=${jaildatadir} hdrver=${imgver} > /dev/null
else
	# create temporary zfs file system for extract $origname data then rename it to $jname
	case $zfsfeat in
		0)
			mkdir -p ${jaildatadir}/tmp.$$
			cbsd imgpart mode=extract jname=${SRC} part=data out=${jaildatadir}/tmp.$$ hdrver=${imgver} > /dev/null
			[ -d "${jaildatadir}/tmp.$$/${origjname}-${jaildatapref}" ] && mv ${jaildatadir}/tmp.$$/${origjname}-${jaildatapref} ${jaildatadir}/${jname}-${jaildatapref}
			rmdir ${jaildatadir}/tmp.$$
			;;
		1)
			. ${zfstool}
			ZPOOL=$( zfs get -Ho value name ${jaildatadir} )
			if [ -z "${ZPOOL}" ]; then
				${ECHO} "Can't determine ZPOOL for ${jaildatadir}. Working on non-zfs scenario"
				mkdir -p ${jaildatadir}/tmp.$$
				cbsd imgpart mode=extract jname=${SRC} part=data out=${jaildatadir}/tmp.$$ hdrver=${imgver} > /dev/null
				[ -d "${jaildatadir}/tmp.$$/${origjname}-${jaildatapref}" ] && mv ${jaildatadir}/tmp.$$/${origjname}-${jaildatapref} ${jaildatadir}/${jname}-${jaildatapref}
				rmdir ${jaildatadir}/tmp.$$
			else
				#create temp zfs
				TMPDATADIR="${jaildatadir}/tmp.$$"
				TMPJAILDATADIR="${TMPDATADIR}/${origjname}-${jaildatapref}"
				mkdir -p ${TMPJAILDATADIR}
				/sbin/zfs create -o atime=off -o mountpoint=${TMPJAILDATADIR} ${ZPOOL}/$jname
				cbsd imgpart mode=extract jname=${SRC} part=data out=${TMPDATADIR} hdrver=${imgver} > /dev/null
				/sbin/zfs unmount ${ZPOOL}/${jname}
				/sbin/zfs set mountpoint=${JAILDIR} ${ZPOOL}/${jname}
				/sbin/zfs mount ${ZPOOL}/${jname}
				rmdir ${TMPJAILDATADIR} ${TMPDATADIR}
			fi
			;;
	esac
fi

cbsd jregister jname=${jname} mode=new
rm -f ${JAILRCCONF}

if [ -f "${jailsysdir}/${jname}/jail-message" ]; then
	echo "---- jail messages ----"
	cat "${jailsysdir}/${jname}/jail-message"
	echo "---- jail messages ----"
fi
