#!/bin/sh
#v9.2.2
globalconf="${workdir}/cbsd.conf";
MYARG="old new fqdn"
MYOPTARG="ip4_addr verbose"
MYDESC="Jail cloning"

[ -f ${globalconf} ] || err 1 "no such conf file";
. ${globalconf}
. ${subr}
. ${tools}
. ${inventory}
. ${jfs}
. ${color}
init $*

[ ! -f "${globalconf}" ] && err 1 "${MAGENTA}no such conf file${NORMAL}";
. ${globalconf}

A=`cbsd jstatus jname=$old`
[ "$A" = "0" ] || err 1 "${MAGENTA}Jail is active. Please stop them${NORMAL}"

DST="${jaildatadir}/${new}-${jaildatapref}"
SRC="${jaildatadir}/${old}-${jaildatapref}"
JAILDIR="${jaildir}/${new}"
JAILFSTAB="${jailfstabdir}/${jailfstabpref}${new}"
JAILFSTABORIG="${jailfstabdir}/${jailfstabpref}${old}"
JAILRCCONF="${jailrcconfdir}/rc.conf_${new}"
JAILRCCONFORIG="${jailrcconfdir}/rc.conf_${old}"
SYSDIROLD="${jailsysdir}/${old}"
SYSDIRNEW="${jailsysdir}/${new}"

[ ! -d "${SRC}" ] && err 1 "${MAGENTA}No jail data: ${GREEN}${SRC}${NORMAL}"
[ -d "${DST}" ] && err 1 "${MAGENTA}Jail already exist: ${GREEN}${DST}${NORMAL}"

[ ! -d "${JAILDIR}" ] && mkdir -p ${JAILDIR}
[ ! -d "${jailfstab}"  ] && mkdir -p $jailfstabdir
[ ! -d "${jailrcconf}"  ] && mkdir -p $jailrcconfdir

printf "${MAGENTA}Cloning.${NORMAL}"
cp ${JAILRCCONFORIG} ${JAILRCCONF}
dot "cp conf"
cp ${JAILFSTABORIG} ${JAILFSTAB}
dot "cp fstab"
/usr/bin/sed "s/\/${old}/\/${new}/g" ${JAILFSTABORIG} > ${JAILFSTAB}
dot "sed fstab"
/usr/bin/sed "s/_${old}_/_${new}_/g" ${JAILRCCONFORIG} > ${JAILRCCONF}
dot "sed conf"
${miscdir}/sysrc -qf ${JAILRCCONF} jname=${new} >/dev/null
dot "${miscdir}/sysrc"
cbsd jset jname=${new} host_hostname="${fqdn}"
if [ -n "${ip4_addr}" ]; then
    cbsd jset jname=${new} ip4_addr="${ip4_addr}"
    dot "jset ip"
fi
cbsd jset jname=${new} path="${jaildir}/${new}"
dot "jset rootdir"
cbsd jset jname=${new} mount_fstab="${jailfstabdir}/${jailfstabpref}${new}"
dot "jset fstab"
cbsd jset jname=${new} data="${jaildatadir}/${new}-${jaildatapref}"
dot "jset data"
cbsd jset jname=${new} rcconf="${jailrcconfdir}/rc.conf_${new}"
dot "jset rcconf"

jname=${new}
if [ "${verbose}" = "1" ]; then
    clonedata $SRC $DST rsync
else
    clonedata $SRC $DST rsync > /dev/null 2>&1
fi

dot "clone rsync"

if [ -d "$SYSDIROLD" ]; then
    cp -Rp ${SYSDIROLD} ${SYSDIRNEW}
    dot "cp sysdir"
fi

cbsd jregister jname=${new} mode=new
dot "jregister"

err 0 "${GREEN}ok${NORMAL}"
