#!/usr/local/bin/cbsd
#v10.1.1
. ${subr}
. ${settingstui}
. ${dialog}
. ${strings}
. ${tools}

[ ! -f "${sharedir}/jail-arg" ] && err 1 "No such jail-arg skel"
. ${sharedir}/jail-arg
CBSDMODULE="jail"
MYDESC="Ncurses based setup for jail-arg"
MYARG="jname"
MYOPTARG="${JARG} outfile"

init $*

commit()
{
	local _oldjname _newjname

	_oldjname="${jname}"

	for i in ${JARG}; do
		eval VAL=\$$i
		eval OVAL=\$OLDVAL_${i}

		if [ "${i}" = "jname" ]; then
			_oldjname="${OVAL}"
			_newjname="${VAL}"
			continue
		fi
		[ "${VAL}" = "${OVAL}" ] && continue
		jset mode=quiet jname=${_oldjname} $i=\"${VAL}\"
	done

	if [ "${_oldjname}" != "${_newjname}" -a -n "${_newjname}" ]; then
		${ECHO} "jname: ${MAGENTA}${_newjname}${NORMAL}"
		jrename old=${_oldjname} new=${_newjname}
		jname="${_newjname}"
	fi

	[ ${repo} -eq 1 ] && jconfig mode=list jname=${jname}
	exit 0
}


store_defaults()
{
	local i VAL

	eval $( for i in "jname" ${JARG}; do
		[ "${i}" = "repo" ] && repo=1 && continue
		eval VAL=\$$i
		echo "OLDVAL_${i}=\"${VAL}\""
	done )
}


dialog_menu_main()
{
	repo=0 # flags for execution jsetup-tui from repo get image

	title=" Config for ${jname} "
	hline=
	local _descr

	local menu_list="
		'EXIT'	'EXIT'	'Exit jconstruct-tui'
	" # END-QUOTE

	for i in ${JARG}; do
		eval VAL=\$$i
		_mydesc=
		eval _mydesc=\$${i}_msg

		[ -z "${_mydesc}" ] && _mydesc="No description"

		if [ -z "${VAL}" ]; then
			menu_list="${menu_list} '$i'	' '	'${_mydesc}'"
		else
			menu_list="${menu_list} '$i'	'${VAL}'	'${_mydesc}'"
		fi
	done

	menu_list="${menu_list} '-'		'-'	''"
	menu_list="${menu_list} 'jrctl'		'RCTL CONFIG >>'	'cbsd jrctl-tui'"
	menu_list="${menu_list} '-'		'-'	''"

	menu_list="${menu_list}	'COMMIT'	'Save changes and quit'	'Save!'"

	local height width rows
	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	# Obtain default-item from previously stored selection
	f_dialog_default_fetch defaultitem

	local menu_choice
	menu_choice=$( eval $DIALOG \
		--clear                                 \
		--title \"\$title\"                     \
		--backtitle \"\$btitle\"                \
		--hline \"\$hline\"                     \
		--item-help                             \
		--ok-label \"\$msg_ok\"                 \
		--cancel-label \"Exit\"                 \
		${USE_XDIALOG:+--help \"\"}             \
		--default-item \"\$defaultitem\"        \
		--menu \"\$prompt\"                     \
		$height $width $rows                    \
		$menu_list                              \
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)

	local retval=$?
	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"

	# Only update default-item on success
	[ $retval -eq $DIALOG_OK ] && f_dialog_default_store "$menu_choice"
	return $retval
}

### MAIN
zero_profile="jail-freebsd-default.conf"
#defaults

. ${buildconf}
readconf ${zero_profile}


# re-read profile for init global_profile_file variable
get_construct_profile ${default_profile}
[ -z "${profile}" -a -n "${jail_profile}" ] && profile="${jail_profile}"

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"

shift #skip for jname

if [ ${jid} -ne 0 ]; then
	# Command for modifying on-the fly here:
	JARG="ip4_addr cpuset astart exec_consolelog mount_src mount_ports mount_kernel allow_mount allow_nullfs allow_tmpfs allow_procfs devfs_ruleset jdomain"
else
	JARG="$@"
fi

f_dialog_title "$msg_system_console_configuration"
f_dialog_backtitle "${ipgm:+bsdconfig }$pgm"
f_mustberoot_init

store_defaults

# fill promt variable used in dialog_menu_main about active jail status
# otherwise - append the argument that we can change also and jname.
if [ ${jid} -ne 0 ]; then
	prompt="Jail is ONLINE. Only on-the-fly options printed."
else
	JARG="jname ${JARG}"
fi

while [ 1 ]; do
	dialog_menu_main || f_die
	f_dialog_menutag_fetch mtag
	case "${mtag}" in
		"EXIT")
			exit 0
			;;
		"-")
			continue
			;;
		"COMMIT")
			commit
			;;
		"jrctl")
			/usr/local/bin/cbsd jrctl-tui jname="${jname}"
			;;
		*)
			get_construct_${mtag}
			;;
	esac
done
