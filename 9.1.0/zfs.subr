# return 1 (got zpool) or 0 (no zpool) for path $1
# export ZPOOL for Z-fs (eg: zroot/jail1)
# ZPART1 = zroot
# ZPART2 = jail1
getpool()
{
TST=$1

ZPOOL=$(/sbin/zfs list |awk '{printf $1" "$5"\n"}' |while read _pool _path; do
# test for slash - we works only with non-root fs
A=`echo $_pool |grep "/"`
[ $? -ne 0 ] && continue
[ "$_path" = "$TST" ] && echo $_pool
done)

[ -z "$ZPOOL" ] && return 1

ZPART1=${ZPOOL%%/*}
ZPART2=${ZPOOL##*/}
return 0
}


# return 0 if $1 is not valid ZFS mountpoint
# return 1 if $1 is valid ZFS mountpoint and mounted
# return 2 if $1 is valid ZFS mountpoint and not mounted
# if  nomnt /mnt; then
#    echo " not zfs (mounted or not) mountpoint"
# fi
# $zname if not empty have zfs source
nomnt()
{
getpool $1

[ -z "$ZPOOL" ] && return 0

A=`zfs get -Ho value mounted ${ZPOOL}`
[ "${A}" = "no" ] && return 2
[ "${A}" = "yes" ] && return 1

#unknown result
return 0
}


# export zmnt if $zroot exist, return 1
getmnt()
{
zmnt=""
[ -z "$1" ] && return 1

zmnt=`zfs get -Ho value mountpoint ${1}`
[ $? -eq 0 ] && return 0

return 1
}


# return 0 if ${ZPOOL}/$1 zfs source exist
# if zfsroot jail1; then
# echo "zroot/$jail1 exist
# fi
zfsroot()
{
PART=$1

zfs list | tail +2|awk '{print $1}' |while read _mnt; do
#echo "[$_mnt] = [${ZPOOL}/$PART]"
[ "$_mnt" = "${ZPOOL}/$PART" ] && exit 0
done

return $?
}

#getpool /usr/jails/jails-data
#echo $?
#echo $ZPOOL