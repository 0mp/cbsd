#v10.0.0
# change passwd for cbsd user via prompt
change_cbsdpw() {
    local oldmodes=`stty -g`
    local pw="1"
    local npw=""

    if [ -n "${cbsd_password}" ]; then
	pw="${cbsd_password}"
	npw="${cbsd_password}"
    fi

    ${ECHO} "${MAGENTA}Changing local password for cbsd user.${NORMAL}"

    while [ "$pw" != "${npw}" ]; do
	printf "${BOLD}New Password: ${NORMAL}"
	stty -echo
	read pw
	printf "\n${BOLD}Retype New Password: ${NORMAL}"
	read npw
	[ "$pw" = "${npw}" ] || ${ECHO} "${MAGENTA}Mismatch; try again, EOF to quit.${NORMAL}"
    done

    stty $oldmodes
    echo
    echo ${npw} |/usr/sbin/pw mod user ${cbsduser} -h 0 -
}

#return 0 errcode for undefined type
#return 1 errcode for ipv4
#return 2 errcode for ipv6
iptype() {

    [ -z "${1}" ] && return 0

    # Identify type {inet,inet6}.
    case "${1}" in
*\.*\.*\.*)     return 1 ;;
*:*)            return 2 ;;
*)              return 0 ;;
    esac
}


resolvhost()
{
    HST=`host -4 -t a $1 | awk '/has address /{print $4"\n"}' |head -n1 |egrep '^([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}$'`
}


# convert string in Xm (mbytes) or Xg (gbytes) to bytes
# example: 
# if conv2bytes "1g"; then
#    echo $convval
# fi
# return bytes in $convval var
# errcode 1 when error
conv2bytes() {
    local _testsize
    local _value

    [ -z "${1}" ] && return 1

    _testsize=`echo "${1}" | sed -n 's/^\([0-9]\{1,\}[gm]\)$/\1/p'`
    [ -z "${_testsize}" ] && return 1

    convval=$((`echo $1 | sed -Ees:g:km:g -es:m:kk:g -es:k:"*2b":g -es:b:"*128w":g -es:w:"*4 ":g -e"s:(^|[^0-9])0x:\1\0X:g" -ey:x:"*":`))

    [ $? -eq 0 -a ${convval} -gt 0 ] || return 1

    export convval
}
