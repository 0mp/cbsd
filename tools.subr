#v10.0.0
#return 0 errcode for undefined type
#return 1 errcode for ipv4
#return 2 errcode for ipv6
iptype() {

    [ -z "${1}" ] && return 0

    # Identify type {inet,inet6}.
    case "${1}" in
*\.*\.*\.*)     return 1 ;;
*:*)            return 2 ;;
*)              return 0 ;;
    esac
}


resolvhost()
{
    HST=`host -4 -t a $1 | awk '/has address /{print $4"\n"}' |head -n1 |egrep '^([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}$'`
}


# convert string in Xm (mbytes) or Xg (gbytes) to bytes
# example: 
# if conv2bytes "1g"; then
#    echo $convval
# fi
# return bytes in $convval var
# errcode 1 when error
conv2bytes() {
    local _testsize
    local _value

    [ -z "${1}" ] && return 1

# expand_number in conv2human does't support for float, eg: 1.1G
    convval=$( ${miscdir}/conv2human ${1} |tr '[:upper:]' '[:lower:]' )
    [ -z "${convval}" ] && return 1
    [ ${convval} -gt 0 ] || return 1

#    _testsize=`echo "${1}" | tr '[:upper:]' '[:lower:]'| sed -n 's/^\([0-9]\{1,\}[gm]\)$/\1/p'`
#    [ -z "${_testsize}" ] && return 1
#    convval=$((`echo $1 | sed -Ees:g:km:g -es:m:kk:g -es:k:"*2b":g -es:b:"*128w":g -es:w:"*4 ":g -e"s:(^|[^0-9])0x:\1\0X:g" -ey:x:"*":`))
#    [ $? -eq 0 -a ${convval} -gt 0 ] || return 1
}

# convert bytes to human readable form
# example:
# if conv2human "10000"; then
#   echo $convval
# fi
# errcode 1 when not number
conv2human() {
    [ -z "${1}" ] && return 1
    convval=$( ${miscdir}/conv2human ${1}| tr '[:upper:]' '[:lower:]' )
    return $?
}
